[gd_scene load_steps=44 format=2]

[ext_resource path="res://assets/textures/environment/leafs/leaf-2.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/environment/leafs/leaf-1.png" type="Texture" id=2]
[ext_resource path="res://assets/textures/environment/leafs/leaf-3.png" type="Texture" id=3]
[ext_resource path="res://assets/textures/environment/leafs/leaf-1-mask.tres" type="ArrayMesh" id=4]
[ext_resource path="res://src/ui/menu/leafs-overlay/LeafLayers.gd" type="Script" id=5]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "Blur_Samples"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "Blur_Radius"

[sub_resource type="VisualShaderNodeExpression" id=3]
size = Vector2( 824.92, 548.44 )
expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"

[sub_resource type="VisualShaderNodeVectorCompose" id=4]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Wind_Force"

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "Wind_Speed"

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 2.3 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "Wind_Offset"

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeScalarFunc" id=22]
function = 19

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=24]

[sub_resource type="VisualShaderNodeTransformCompose" id=25]
default_input_values = [ 0, Vector3( 1, 0, 0 ), 1, Vector3( 0, 1, 0 ), 2, Vector3( 0, 0, 0 ), 3, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShader" id=26]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform float Wind_Offset;
uniform float Wind_Speed;
uniform float Wind_Force;
uniform float Blur_Radius;
uniform float Blur_Samples;



void vertex() {
// Input:2
	float n_out2p0 = TIME;

// ScalarUniform:31
	float n_out31p0 = Wind_Offset;

// ScalarOp:32
	float n_out32p0 = n_out2p0 + n_out31p0;

// ScalarUniform:26
	float n_out26p0 = Wind_Speed;

// ScalarOp:24
	float n_out24p0 = n_out32p0 * n_out26p0;

// ScalarFunc:25
	float n_out25p0 = sin(n_out24p0);

// ScalarOp:30
	float n_in30p1 = 2.30000;
	float n_out30p0 = n_out26p0 * n_in30p1;

// ScalarOp:28
	float n_out28p0 = n_out32p0 * n_out30p0;

// ScalarFunc:27
	float n_out27p0 = sin(n_out28p0);

// ScalarOp:29
	float n_out29p0 = n_out25p0 + n_out27p0;

// ScalarUniform:18
	float n_out18p0 = Wind_Force;

// ScalarOp:19
	float n_out19p0 = n_out29p0 * n_out18p0;

// ScalarFunc:11
	float n_out11p0 = cos(n_out19p0);

// ScalarFunc:33
	float n_out33p0 = -(n_out19p0);

// ScalarFunc:12
	float n_out12p0 = sin(n_out33p0);

// VectorCompose:10
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out11p0, n_out12p0, n_in10p2);

// ScalarFunc:16
	float n_out16p0 = sin(n_out19p0);

// ScalarFunc:15
	float n_out15p0 = cos(n_out19p0);

// VectorCompose:14
	float n_in14p2 = 0.00000;
	vec3 n_out14p0 = vec3(n_out16p0, n_out15p0, n_in14p2);

// TransformCompose:9
	vec3 n_in9p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in9p3 = vec3(0.00000, 0.00000, 0.00000);
	mat4 n_out9p0 = mat4(vec4(n_out10p0, 0.0), vec4(n_out14p0, 0.0), vec4(n_in9p2, 0.0), vec4(n_in9p3, 1.0));

// Input:5
	vec3 n_out5p0 = vec3(VERTEX, 0.0);

// TransformVectorMult:8
	vec3 n_out8p0 = (n_out9p0 * vec4(n_out5p0, 1.0)).xyz;

// Output:0
	VERTEX = n_out8p0.xy;

}

void fragment() {
// ScalarUniform:5
	float n_out5p0 = Blur_Radius;

// ScalarUniform:10
	float n_out10p0 = Blur_Samples;

// Expression:9
	vec3 n_out9p0;
	float n_out9p1;
	n_out9p0 = vec3(0.0, 0.0, 0.0);
	n_out9p1 = 0.0;
	{
		float scale = n_out5p0 / (n_out10p0*2.0);
		
		vec4 col = vec4(0.0);
		float n = 0.0;
			
		for(int x=-int(n_out10p0)/2; x < int(n_out10p0)/2; ++x) {
			for(int y=-int(n_out10p0)/2; y < int(n_out10p0)/2; ++y) {
				col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
				n += 1.0;
			}
		}
		
		col /= n;
		
		n_out9p0 = col.rgb;
		n_out9p1 = col.a;
	}

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out9p1;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 520, 100 )
nodes/vertex/2/node = SubResource( 12 )
nodes/vertex/2/position = Vector2( -2020, -80 )
nodes/vertex/5/node = SubResource( 23 )
nodes/vertex/5/position = Vector2( 60, 160 )
nodes/vertex/8/node = SubResource( 24 )
nodes/vertex/8/position = Vector2( 260, 80 )
nodes/vertex/9/node = SubResource( 25 )
nodes/vertex/9/position = Vector2( 0, 20 )
nodes/vertex/10/node = SubResource( 4 )
nodes/vertex/10/position = Vector2( -220, -80 )
nodes/vertex/11/node = SubResource( 5 )
nodes/vertex/11/position = Vector2( -420, -120 )
nodes/vertex/12/node = SubResource( 6 )
nodes/vertex/12/position = Vector2( -420, -20 )
nodes/vertex/14/node = SubResource( 7 )
nodes/vertex/14/position = Vector2( -220, 120 )
nodes/vertex/15/node = SubResource( 8 )
nodes/vertex/15/position = Vector2( -420, 180 )
nodes/vertex/16/node = SubResource( 9 )
nodes/vertex/16/position = Vector2( -420, 80 )
nodes/vertex/18/node = SubResource( 10 )
nodes/vertex/18/position = Vector2( -980, 220 )
nodes/vertex/19/node = SubResource( 11 )
nodes/vertex/19/position = Vector2( -860, -40 )
nodes/vertex/24/node = SubResource( 13 )
nodes/vertex/24/position = Vector2( -1440, -40 )
nodes/vertex/25/node = SubResource( 14 )
nodes/vertex/25/position = Vector2( -1260, -20 )
nodes/vertex/26/node = SubResource( 15 )
nodes/vertex/26/position = Vector2( -1960, 160 )
nodes/vertex/27/node = SubResource( 16 )
nodes/vertex/27/position = Vector2( -1260, 100 )
nodes/vertex/28/node = SubResource( 17 )
nodes/vertex/28/position = Vector2( -1440, 80 )
nodes/vertex/29/node = SubResource( 18 )
nodes/vertex/29/position = Vector2( -1080, 0 )
nodes/vertex/30/node = SubResource( 19 )
nodes/vertex/30/position = Vector2( -1640, 180 )
nodes/vertex/31/node = SubResource( 20 )
nodes/vertex/31/position = Vector2( -1960, 100 )
nodes/vertex/32/node = SubResource( 21 )
nodes/vertex/32/position = Vector2( -1860, -100 )
nodes/vertex/33/node = SubResource( 22 )
nodes/vertex/33/position = Vector2( -600, -20 )
nodes/vertex/connections = PoolIntArray( 5, 0, 8, 1, 9, 0, 8, 0, 11, 0, 10, 0, 12, 0, 10, 1, 10, 0, 9, 0, 15, 0, 14, 1, 16, 0, 14, 0, 14, 0, 9, 1, 18, 0, 19, 1, 8, 0, 0, 0, 24, 0, 25, 0, 26, 0, 24, 1, 19, 0, 11, 0, 19, 0, 16, 0, 19, 0, 15, 0, 28, 0, 27, 0, 29, 0, 19, 0, 30, 0, 28, 1, 26, 0, 30, 0, 2, 0, 32, 0, 31, 0, 32, 1, 32, 0, 28, 0, 32, 0, 24, 0, 27, 0, 29, 1, 25, 0, 29, 0, 19, 0, 33, 0, 33, 0, 12, 0 )
nodes/fragment/0/position = Vector2( 780, 480 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( -300, 480 )
nodes/fragment/9/node = SubResource( 3 )
nodes/fragment/9/position = Vector2( -80, 440 )
nodes/fragment/9/size = Vector2( 824.92, 548.44 )
nodes/fragment/9/input_ports = "0,0,radius;1,0,SAMPLES;"
nodes/fragment/9/output_ports = "0,1,color;1,0,alpha;"
nodes/fragment/9/expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -300, 540 )
nodes/fragment/connections = PoolIntArray( 9, 1, 0, 1, 9, 0, 0, 0, 5, 0, 9, 0, 10, 0, 9, 1 )

[sub_resource type="ShaderMaterial" id=27]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = 1.0
shader_param/Wind_Speed = 4.0
shader_param/Wind_Force = 0.05
shader_param/Blur_Radius = 0.0
shader_param/Blur_Samples = 2.0

[sub_resource type="MultiMesh" id=28]
custom_data_format = 2
instance_count = 10
visible_instance_count = 10
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( -0.0268108, -0.170876, -0.170876, 0.0268108, 65.8088, 419.426, -0.188005, -0.0368778, 0.0368778, -0.188005, 409.316, 80.2889, 0.196569, 0.0706807, 0.0706807, -0.196569, -417.671, -150.182, -0.214453, -0.0463521, -0.0463521, 0.214453, 376.741, 81.4293, 0.179251, -0.0818762, 0.0818762, 0.179251, -413.69, 188.961, -0.189554, -0.0341347, -0.0341347, 0.189554, 378.365, 68.1359, 0.0115356, 0.160722, -0.160722, 0.0115356, -27.2283, -379.364, 0.165838, -0.0999027, -0.0999027, -0.165838, -384.446, 231.595, -0.212877, 0.0584724, 0.0584724, 0.212877, 431.102, -118.414, -0.215413, -0.0393614, -0.0393614, 0.215413, 374.137, 68.3642 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="GDScript" id=29]
script/source = "tool
extends MultiMeshInstance2D

export var leaf_count := 100
export var min_radius := 700.0
export var max_radius := 1000.0
export var leaf_scale := 1.0
export var scale_spread := 0.2

export var new_placement := false setget _generate_new_placement

func _generate_new_placement(value: bool) -> void:
	new_placement = false
	
	multimesh.instance_count = leaf_count
	multimesh.visible_instance_count = leaf_count
	for i in range(leaf_count):
		var r = randf() * 2 * PI
		var t : Transform2D
		
		if randi() % 2 == 0:
			t = Transform2D.FLIP_Y
		else:
			t = Transform2D.IDENTITY
		var scale_random = rand_range(1 - scale_spread, 1 + scale_spread)
		t = t.scaled(Vector2(leaf_scale, leaf_scale) * scale_random)
		var dist = rand_range(min_radius, max_radius)
		var angle = randf() * 2 * PI
		var pos := Vector2(dist * cos(angle), dist * sin(angle))
		t = t.rotated(Vector2.ZERO.angle_to_point(pos))
		t.origin = pos
		
		multimesh.set_instance_transform_2d(i, t)
"

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.8
shader_param/Wind_Force = 0.08
shader_param/Blur_Radius = 0.04
shader_param/Blur_Samples = 3.0

[sub_resource type="MultiMesh" id=31]
custom_data_format = 2
instance_count = 40
visible_instance_count = 40
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( -0.0113845, -0.721012, 0.721012, -0.0113845, 9.5851, 607.055, -0.199014, 0.907768, -0.907768, -0.199014, 122.593, -559.185, -0.2472, -0.921994, -0.921994, 0.2472, 145.32, 542.007, -0.788004, 0.137406, -0.137406, -0.788004, 561.117, -97.8434, 0.848034, -0.435228, 0.435228, 0.848034, -513.129, 263.348, 0.463029, 0.447917, -0.447917, 0.463029, -371.298, -359.18, -0.771444, 0.500831, -0.500831, -0.771444, 459.665, -298.421, -0.212851, -0.638598, 0.638598, -0.212851, 186.501, 559.54, -0.418914, -0.59383, 0.59383, -0.418914, 351.718, 498.576, 0.695809, 0.0471399, 0.0471399, -0.695809, -588.598, -39.8765, 0.260662, -0.83577, -0.83577, -0.260662, -163.962, 525.719, 0.690368, 0.232115, 0.232115, -0.690368, -491.194, -165.149, 0.818102, 0.345301, -0.345301, 0.818102, -472.656, -199.497, 0.116882, -0.753076, -0.753076, -0.116882, -85.029, 547.843, -0.37968, 0.677688, 0.677688, 0.37968, 250.835, -447.713, 0.654837, 0.191022, 0.191022, -0.654837, -581.764, -169.706, -0.797434, 0.432751, 0.432751, 0.797434, 451.07, -244.786, 0.433414, -0.53799, 0.53799, 0.433414, -367.907, 456.677, -0.362997, 0.633087, -0.633087, -0.362997, 287.009, -500.559, -0.473844, -0.778594, -0.778594, 0.473844, 265.227, 435.806, 0.180676, 0.915629, -0.915629, 0.180676, -103.671, -525.383, -0.673715, -0.0685573, 0.0685573, -0.673715, 609.269, 61.9993, -0.654351, -0.527604, 0.527604, -0.654351, 419.555, 338.287, 0.0994139, -0.906235, 0.906235, 0.0994139, -66.8227, 609.141, 0.232662, 0.768954, 0.768954, -0.232662, -166.269, -549.522, -0.141057, 0.674842, 0.674842, 0.141057, 109.657, -524.622, -0.929451, 0.205071, -0.205071, -0.929451, 564.542, -124.559, 0.423051, -0.545867, 0.545867, 0.423051, -317.65, 409.867, -0.622234, -0.179283, -0.179283, 0.622234, 500.603, 144.238, 0.314611, -0.729035, -0.729035, -0.314611, -210.724, 488.302, -0.749097, 0.51379, 0.51379, 0.749097, 484.735, -332.47, -0.430455, -0.647745, -0.647745, 0.430455, 336.002, 505.612, 0.0313301, -0.726328, 0.726328, 0.0313301, -23.3201, 540.631, 0.151176, -0.726625, 0.726625, 0.151176, -123.099, 591.674, 0.00189014, -0.833996, 0.833996, 0.00189014, -1.28982, 569.122, 0.49924, -0.526019, 0.526019, 0.49924, -401.541, 423.08, 0.532564, 0.790841, 0.790841, -0.532564, -325.09, -482.748, -0.901346, 0.267305, 0.267305, 0.901346, 530.945, -157.458, -0.186131, 0.707017, -0.707017, -0.186131, 131.894, -500.997, 0.291205, 0.679112, -0.679112, 0.291205, -225.612, -526.143 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.5
shader_param/Wind_Force = 0.12
shader_param/Blur_Radius = 0.05
shader_param/Blur_Samples = 6.0

[sub_resource type="MultiMesh" id=33]
custom_data_format = 2
instance_count = 60
visible_instance_count = 60
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( 1.612, 0.620066, 0.620066, -1.612, -609.282, -234.364, 1.62667, 1.22711, -1.22711, 1.62667, -621.11, -468.544, 0.821286, -1.83488, -1.83488, -0.821286, -281.715, 629.395, -1.94619, 0.0799888, -0.0799888, -1.94619, 746.649, -30.6874, 1.14673, -1.20086, -1.20086, -1.14673, -477.325, 499.853, -1.23484, 0.606441, -0.606441, -1.23484, 693.785, -340.723, 1.27496, 1.4247, -1.4247, 1.27496, -471.278, -526.631, -1.43101, -1.05957, 1.05957, -1.43101, 585.319, 433.391, 0.99018, -1.74384, -1.74384, -0.99018, -377.849, 665.444, 1.32308, -0.427572, -0.427572, -1.32308, -623.811, 201.594, -1.81928, 0.599423, 0.599423, 1.81928, 738.245, -243.239, -0.383998, 1.89704, 1.89704, 0.383998, 133.586, -659.947, 0.498072, 1.69484, -1.69484, 0.498072, -198.723, -676.212, -0.815058, -1.20929, -1.20929, 0.815058, 438.625, 650.78, -0.605013, 1.73243, 1.73243, 0.605013, 214.438, -614.032, 0.241628, -1.53203, 1.53203, 0.241628, -120.275, 762.601, -0.837803, 1.534, 1.534, 0.837803, 322.369, -590.249, -1.51702, 0.439531, -0.439531, -1.51702, 674.438, -195.406, -0.682162, 1.59958, 1.59958, 0.682162, 279.38, -655.108, 1.94529, 0.239516, 0.239516, -1.94529, -784.075, -96.5404, -0.102971, 1.87632, -1.87632, -0.102971, 38.1804, -695.713, -1.32018, 0.863528, 0.863528, 1.32018, 591.159, -386.675, -1.91973, -0.241576, 0.241576, -1.91973, 764.827, 96.2449, -1.01398, 1.5554, 1.5554, 1.01398, 383.879, -588.852, -0.57704, 1.66526, 1.66526, 0.57704, 253.108, -730.435, 0.248915, 1.37015, -1.37015, 0.248915, -130.125, -716.276, 1.90262, 0.693753, 0.693753, -1.90262, -710.753, -259.162, -0.600727, 1.38979, 1.38979, 0.600727, 285.542, -660.607, -1.41505, -1.14126, 1.14126, -1.41505, 536.507, 432.7, 0.899749, -1.81731, -1.81731, -0.899749, -318.683, 643.676, 0.855941, -1.58909, -1.58909, -0.855941, -335.696, 623.234, 0.167381, 1.909, -1.909, 0.167381, -63.1703, -720.463, 0.414817, 1.93721, 1.93721, -0.414817, -166.577, -777.921, 0.0738326, -1.40447, 1.40447, 0.0738326, -39.6056, 753.392, 1.378, 0.409857, -0.409857, 1.378, -724.169, -215.388, 0.78298, 1.74417, -1.74417, 0.78298, -277.819, -618.873, 1.35961, -0.202063, -0.202063, -1.35961, -716.374, 106.466, 1.46119, -0.193881, -0.193881, -1.46119, -704.707, 93.5056, -1.72541, 0.195931, -0.195931, -1.72541, 717.679, -81.497, 0.345697, -1.51885, 1.51885, 0.345697, -173.812, 763.663, 1.1957, -1.11035, -1.11035, -1.1957, -563.737, 523.5, 1.68043, -0.13433, 0.13433, 1.68043, -758.264, 60.6141, -0.68456, -1.46322, 1.46322, -0.68456, 336.156, 718.519, -1.13212, 0.880615, 0.880615, 1.13212, 561.732, -436.942, -0.911672, -1.26274, -1.26274, 0.911672, 437.637, 606.161, 1.3548, -0.733951, -0.733951, -1.3548, -642.832, 348.25, -1.55404, 0.346461, 0.346461, 1.55404, 734.429, -163.735, 1.18623, -0.713979, -0.713979, -1.18623, -558.344, 336.06, -1.02408, 0.985162, -0.985162, -1.02408, 528.177, -508.105, 0.695707, 1.29516, -1.29516, 0.695707, -323.382, -602.022, -1.584, -1.01622, 1.01622, -1.584, 657.382, 421.745, -0.981611, -1.58494, 1.58494, -0.981611, 389.083, 628.225, 1.68347, 0.681767, 0.681767, -1.68347, -649.067, -262.856, -1.23174, -1.17242, 1.17242, -1.23174, 546.166, 519.865, 1.69955, -0.245029, 0.245029, 1.69955, -739.997, 106.688, 0.014882, -1.57009, -1.57009, -0.014882, -7.26814, 766.804, -1.33173, 0.535695, -0.535695, -1.33173, 733.535, -295.068, 1.53078, 0.0815464, 0.0815464, -1.53078, -766.039, -40.8078, -1.73308, -0.594433, 0.594433, -1.73308, 639.327, 219.284, -0.144621, 1.79185, -1.79185, -0.144621, 56.7827, -703.539 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="Animation" id=34]
resource_name = "Close"
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 1, 1 ),
"update": 0,
"values": [ 0.0, 10.0, -720.0 ]
}

[sub_resource type="Animation" id=35]
resource_name = "Open"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.8 ),
"transitions": PoolRealArray( 1, 1, 0.5, 0.5 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1 ), Vector2( 0.95, 0.95 ), Vector2( 2.2, 2.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.3, 0.8 ),
"transitions": PoolRealArray( 1, 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1 ), Vector2( 0.95, 0.95 ), Vector2( 2.2, 2.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.8 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.95, 0.95 ), Vector2( 2.2, 2.2 ) ]
}

[sub_resource type="Animation" id=36]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 0.5 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=37]
resource_name = "Reset_Large"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 0.5 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}

[sub_resource type="Animation" id=38]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 1.1 ),
"transitions": PoolRealArray( 0.5, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.4 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.6, 1.1, 1.5 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}

[node name="LeafLayers" type="Node2D"]
script = ExtResource( 5 )

[node name="Back" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.658824, 0.658824, 0.658824, 1 )
light_mask = 16
material = SubResource( 27 )
scale = Vector2( 2.2, 2.2 )
z_index = 4
multimesh = SubResource( 28 )
texture = ExtResource( 3 )
script = SubResource( 29 )
leaf_count = 10
min_radius = 377.0
max_radius = 460.0
leaf_scale = 0.2

[node name="Middle" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.388235, 0.388235, 0.388235, 1 )
light_mask = 16
material = SubResource( 30 )
scale = Vector2( 2.2, 2.2 )
z_index = 4
multimesh = SubResource( 31 )
texture = ExtResource( 1 )
script = SubResource( 29 )
leaf_count = 40
min_radius = 510.0
max_radius = 620.0
leaf_scale = 0.8

[node name="Front" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.109804, 0.109804, 0.109804, 1 )
light_mask = 0
material = SubResource( 32 )
scale = Vector2( 2.2, 2.2 )
z_index = 4
multimesh = SubResource( 33 )
texture = ExtResource( 2 )
script = SubResource( 29 )
leaf_count = 60
min_radius = 650.0
max_radius = 800.0
leaf_scale = 1.7

[node name="DebugBackground" type="Polygon2D" parent="."]
visible = false
position = Vector2( 160.964, 20.5486 )
color = Color( 0.380392, 0.345098, 0.345098, 1 )
polygon = PoolVector2Array( 157.767, -1197.84, 921.491, -721.798, 1075.61, 288.511, 363.253, 1096.76, -790.896, 990.589, -1445.03, 124.122, -1075.15, -937.558, -407.321, -1214.96 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Close = SubResource( 34 )
anims/Open = SubResource( 35 )
anims/Reset = SubResource( 36 )
anims/Reset_Large = SubResource( 37 )
anims/Shrink = SubResource( 38 )
