[gd_scene load_steps=36 format=2]

[ext_resource path="res://src/deck/Deck.gd" type="Script" id=1]

[sub_resource type="BoxShape" id=1]
extents = Vector3( 0.6, 0.05, 0.6 )

[sub_resource type="Animation" id=2]
resource_name = "FloatHigh"
length = 3.0
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Cards:rotation_degrees")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 180 ), Vector3( 0, 0, 184 ), Vector3( 0, 0, 176 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Cards:translation:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, -0.02, -0.25, 0, 0.25, 0, 0.02, -0.25, 0, 0.25, 0, 0.000252709, -0.30306, 0, 0.42531, -0.0665321 ),
"times": PoolRealArray( 0, 1, 2, 3 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("Cards:translation:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0.749925, -0.194056, -0.0801169, 0.268059, 0.00145686, 0.75, -0.440998, 0.048886, 0.346835, -0.0408428, 0.749779, -0.375298, -0.0457008, 0.419073, 0.049107, 0.75, -0.278407, -0.00105613, 0.25, 0 ),
"times": PoolRealArray( 0, 1, 2, 3 )
}

[sub_resource type="Animation" id=3]
length = 0.7
step = 0.05
tracks/0/type = "bezier"
tracks/0/path = NodePath("Cards:translation:y")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.313248, 0.0874254, 0.214084, -0.15175, 0.11585, 0.0582422, -0.0406319, 0.205958, -0.0944467, -0.0182844, 0.25, 0 ),
"times": PoolRealArray( 0, 0.426584, 0.698906 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Cards:rotation_degrees:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 10, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.528422 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("Cards:rotation_degrees:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 10, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.528422 )
}

[sub_resource type="Animation" id=4]
resource_name = "PutBackDown"
length = 0.2
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Cards:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 180 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Cards:translation:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.0130551, -0.0526524, 0.0270753, 0.294951, 0.5, -0.0766804, -0.00283843, 0.0861502, 0.00558704, 0, -0.0266047, 0.311802, 0.0220661, 0.489517 ),
"times": PoolRealArray( 0, 0.1, 0.2 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("Cards:translation:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0.75, -0.0130551, -0.00509977, 0.0233195, 0.172646, 1, -0.0649438, 0.00268793, 0.0723009, -0.00573742, 0, -0.0340617, 0.80469, 0.202712, -0.0125776 ),
"times": PoolRealArray( 0, 0.1, 0.2 )
}

[sub_resource type="Animation" id=5]
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Cards:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 180 ), Vector3( 0, 0, 180 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Cards:translation:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.00980705, 0.488554, 0.525212, -0.0543802, -0.000872046, 0.107878, -0.0960905, 0, -0.215595, 0.00108168, 0.453521, 0.0747144 ),
"times": PoolRealArray( 0, 0.156913, 0.5 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("Cards:translation:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.0183884, 0.556218, 1, -0.173995, 0.0371706, 0.0937363, -0.026801, 0.749925, -0.13387, 0.0198805, 0.160713, 0.0669677 ),
"times": PoolRealArray( 0, 0.3, 0.5 )
}

[sub_resource type="ViewportTexture" id=6]
viewport_path = NodePath("Viewport")

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=21]
operator = 6

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=22]
function = 18

[sub_resource type="VisualShaderNodeVectorDecompose" id=29]

[sub_resource type="VisualShaderNodeScalarOp" id=30]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=31]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=14]
constant = 0.95

[sub_resource type="VisualShaderNodeScalarOp" id=32]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=33]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeInput" id=34]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=35]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=37]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=38]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=41]
default_input_values = [ 0, 0.0, 1, 0.15 ]

[sub_resource type="VisualShaderNodeColorConstant" id=42]
constant = Color( 1, 1, 1, 0.392157 )

[sub_resource type="VisualShaderNodeScalarOp" id=43]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=44]
default_input_values = [ 0, Vector3( 1, 1, 0 ), 1, Vector3( 0, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=45]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=46]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=18]
constant = 10.0

[sub_resource type="VisualShader" id=11]
code = "shader_type spatial;
render_mode unshaded;




void vertex() {
// Output:0

}

void fragment() {
// Color:41
	vec3 n_out41p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out41p1 = 0.392157;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:44
	vec3 n_in44p0 = vec3(1.00000, 1.00000, 0.00000);
	vec3 n_out44p0 = n_in44p0 - n_out2p0;

// Scalar:3
	float n_out3p0 = 0.950000;

// VectorOp:45
	vec3 n_out45p0 = n_out44p0 - vec3(n_out3p0);

// Scalar:7
	float n_out7p0 = 10.000000;

// VectorOp:46
	vec3 n_out46p0 = n_out45p0 * vec3(n_out7p0);

// VectorDecompose:5
	float n_out5p0 = n_out46p0.x;
	float n_out5p1 = n_out46p0.y;
	float n_out5p2 = n_out46p0.z;

// ScalarOp:11
	float n_in11p1 = 1.00000;
	float n_out11p0 = n_out5p0 * n_in11p1;

// ScalarOp:18
	float n_in18p1 = 1.00000;
	float n_out18p0 = n_out5p1 * n_in18p1;

// ScalarOp:19
	float n_out19p0 = max(n_out11p0, n_out18p0);

// VectorOp:4
	vec3 n_out4p0 = n_out2p0 - vec3(n_out3p0);

// VectorOp:6
	vec3 n_out6p0 = n_out4p0 * vec3(n_out7p0);

// VectorDecompose:27
	float n_out27p0 = n_out6p0.x;
	float n_out27p1 = n_out6p0.y;
	float n_out27p2 = n_out6p0.z;

// ScalarOp:28
	float n_in28p1 = 1.00000;
	float n_out28p0 = n_out27p0 * n_in28p1;

// ScalarOp:29
	float n_in29p1 = 1.00000;
	float n_out29p0 = n_out27p1 * n_in29p1;

// ScalarOp:30
	float n_out30p0 = max(n_out28p0, n_out29p0);

// ScalarOp:31
	float n_out31p0 = max(n_out19p0, n_out30p0);

// Input:32
	float n_out32p0 = TIME;

// ScalarFunc:33
	float n_out33p0 = sin(n_out32p0);

// ScalarOp:35
	float n_in35p1 = 0.10000;
	float n_out35p0 = n_out33p0 * n_in35p1;

// ScalarOp:40
	float n_in40p1 = 0.15000;
	float n_out40p0 = n_out35p0 + n_in40p1;

// ScalarOp:37
	float n_out37p0 = n_out31p0 * n_out40p0;

// ScalarFunc:20
	float n_out20p0 = min(max(n_out37p0, 0.0), 1.0);

// ScalarOp:42
	float n_out42p0 = n_out41p1 * n_out20p0;

// Output:0
	ALBEDO = n_out41p0;
	ALPHA = n_out42p0;
	EMISSION = n_out41p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 33.3962, 209.362 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 1400, 180 )
nodes/fragment/2/node = SubResource( 13 )
nodes/fragment/2/position = Vector2( -480, 360 )
nodes/fragment/3/node = SubResource( 14 )
nodes/fragment/3/position = Vector2( -380, 460 )
nodes/fragment/4/node = SubResource( 15 )
nodes/fragment/4/position = Vector2( -140, 340 )
nodes/fragment/5/node = SubResource( 16 )
nodes/fragment/5/position = Vector2( 280, 220 )
nodes/fragment/6/node = SubResource( 17 )
nodes/fragment/6/position = Vector2( 100, 440 )
nodes/fragment/7/node = SubResource( 18 )
nodes/fragment/7/position = Vector2( -160, 460 )
nodes/fragment/11/node = SubResource( 19 )
nodes/fragment/11/position = Vector2( 540, 140 )
nodes/fragment/18/node = SubResource( 20 )
nodes/fragment/18/position = Vector2( 540, 260 )
nodes/fragment/19/node = SubResource( 21 )
nodes/fragment/19/position = Vector2( 720, 180 )
nodes/fragment/20/node = SubResource( 22 )
nodes/fragment/20/position = Vector2( 1080, 620 )
nodes/fragment/27/node = SubResource( 29 )
nodes/fragment/27/position = Vector2( 280, 440 )
nodes/fragment/28/node = SubResource( 30 )
nodes/fragment/28/position = Vector2( 540, 380 )
nodes/fragment/29/node = SubResource( 31 )
nodes/fragment/29/position = Vector2( 540, 500 )
nodes/fragment/30/node = SubResource( 32 )
nodes/fragment/30/position = Vector2( 720, 420 )
nodes/fragment/31/node = SubResource( 33 )
nodes/fragment/31/position = Vector2( 900, 180 )
nodes/fragment/32/node = SubResource( 34 )
nodes/fragment/32/position = Vector2( 100, 700 )
nodes/fragment/33/node = SubResource( 35 )
nodes/fragment/33/position = Vector2( 340, 700 )
nodes/fragment/35/node = SubResource( 37 )
nodes/fragment/35/position = Vector2( 540, 660 )
nodes/fragment/37/node = SubResource( 38 )
nodes/fragment/37/position = Vector2( 900, 600 )
nodes/fragment/40/node = SubResource( 41 )
nodes/fragment/40/position = Vector2( 720, 660 )
nodes/fragment/41/node = SubResource( 42 )
nodes/fragment/41/position = Vector2( 920, 80 )
nodes/fragment/42/node = SubResource( 43 )
nodes/fragment/42/position = Vector2( 1220, 340 )
nodes/fragment/44/node = SubResource( 44 )
nodes/fragment/44/position = Vector2( -380, 220 )
nodes/fragment/45/node = SubResource( 45 )
nodes/fragment/45/position = Vector2( -140, 220 )
nodes/fragment/46/node = SubResource( 46 )
nodes/fragment/46/position = Vector2( 100, 220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 6, 0, 5, 0, 11, 0, 5, 1, 18, 0, 11, 0, 19, 0, 18, 0, 19, 1, 27, 0, 28, 0, 27, 1, 29, 0, 28, 0, 30, 0, 29, 0, 30, 1, 19, 0, 31, 0, 30, 0, 31, 1, 33, 0, 35, 0, 31, 0, 37, 0, 35, 0, 40, 0, 40, 0, 37, 1, 32, 0, 33, 0, 37, 0, 20, 0, 41, 0, 0, 0, 41, 1, 42, 0, 42, 0, 0, 1, 7, 0, 6, 1, 2, 0, 44, 1, 3, 0, 45, 1, 44, 0, 45, 0, 7, 0, 46, 1, 45, 0, 46, 0, 46, 0, 5, 0, 6, 0, 27, 0, 20, 0, 42, 1, 41, 0, 0, 5 )

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )

[sub_resource type="QuadMesh" id=7]
material = SubResource( 12 )

[node name="Deck" type="Area"]
collision_layer = 2
collision_mask = 0
script = ExtResource( 1 )

[node name="Cards" type="Spatial" parent="."]

[node name="HoverTween" type="Tween" parent="."]

[node name="Hitbox" type="CollisionShape" parent="."]
visible = false
shape = SubResource( 1 )
__meta__ = {
"_editor_description_": "The only purpose of this node is to display the deck position in the editor"
}

[node name="Animator" type="AnimationPlayer" parent="."]
anims/FloatHigh = SubResource( 2 )
anims/Hover = SubResource( 3 )
anims/PutBackDown = SubResource( 4 )
anims/ShowBackHigh = SubResource( 5 )

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
flip_v = true
billboard = 1
texture = SubResource( 6 )
__meta__ = {
"_editor_description_": "For debug purposes"
}

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 200, 32 )
transparent_bg = true
__meta__ = {
"_editor_description_": "For debug purposes"
}

[node name="Label" type="Label" parent="Viewport"]
margin_right = 40.0
margin_bottom = 14.0
custom_colors/font_color = Color( 0, 1, 0, 1 )
align = 1
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "For debug purposes"
}

[node name="Glow" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 0, 0 )
mesh = SubResource( 7 )
material/0 = null
