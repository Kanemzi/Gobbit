[gd_scene load_steps=42 format=2]

[ext_resource path="res://assets/textures/environment/leafs/leaf-2.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/environment/leafs/leaf-1.png" type="Texture" id=2]
[ext_resource path="res://assets/textures/environment/leafs/leaf-3.png" type="Texture" id=3]
[ext_resource path="res://assets/textures/environment/leafs/leaf-1-mask.tres" type="ArrayMesh" id=4]
[ext_resource path="res://src/ui/menu/leafs-overlay/LeafLayer.gd" type="Script" id=5]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "Blur_Samples"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "Blur_Radius"

[sub_resource type="VisualShaderNodeExpression" id=3]
size = Vector2( 979.92, 771.44 )
expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"

[sub_resource type="VisualShaderNodeVectorCompose" id=4]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Wind_Force"

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "Wind_Speed"

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 2.3 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "Wind_Offset"

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeScalarFunc" id=22]
function = 19

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=24]

[sub_resource type="VisualShaderNodeTransformCompose" id=25]
default_input_values = [ 0, Vector3( 1, 0, 0 ), 1, Vector3( 0, 1, 0 ), 2, Vector3( 0, 0, 0 ), 3, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShader" id=26]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform float Wind_Offset;
uniform float Wind_Speed;
uniform float Wind_Force;
uniform float Blur_Radius;
uniform float Blur_Samples;



void vertex() {
// Input:2
	float n_out2p0 = TIME;

// ScalarUniform:31
	float n_out31p0 = Wind_Offset;

// ScalarOp:32
	float n_out32p0 = n_out2p0 + n_out31p0;

// ScalarUniform:26
	float n_out26p0 = Wind_Speed;

// ScalarOp:24
	float n_out24p0 = n_out32p0 * n_out26p0;

// ScalarFunc:25
	float n_out25p0 = sin(n_out24p0);

// ScalarOp:30
	float n_in30p1 = 2.30000;
	float n_out30p0 = n_out26p0 * n_in30p1;

// ScalarOp:28
	float n_out28p0 = n_out32p0 * n_out30p0;

// ScalarFunc:27
	float n_out27p0 = sin(n_out28p0);

// ScalarOp:29
	float n_out29p0 = n_out25p0 + n_out27p0;

// ScalarUniform:18
	float n_out18p0 = Wind_Force;

// ScalarOp:19
	float n_out19p0 = n_out29p0 * n_out18p0;

// ScalarFunc:11
	float n_out11p0 = cos(n_out19p0);

// ScalarFunc:33
	float n_out33p0 = -(n_out19p0);

// ScalarFunc:12
	float n_out12p0 = sin(n_out33p0);

// VectorCompose:10
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out11p0, n_out12p0, n_in10p2);

// ScalarFunc:16
	float n_out16p0 = sin(n_out19p0);

// ScalarFunc:15
	float n_out15p0 = cos(n_out19p0);

// VectorCompose:14
	float n_in14p2 = 0.00000;
	vec3 n_out14p0 = vec3(n_out16p0, n_out15p0, n_in14p2);

// TransformCompose:9
	vec3 n_in9p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in9p3 = vec3(0.00000, 0.00000, 0.00000);
	mat4 n_out9p0 = mat4(vec4(n_out10p0, 0.0), vec4(n_out14p0, 0.0), vec4(n_in9p2, 0.0), vec4(n_in9p3, 1.0));

// Input:5
	vec3 n_out5p0 = vec3(VERTEX, 0.0);

// TransformVectorMult:8
	vec3 n_out8p0 = (n_out9p0 * vec4(n_out5p0, 1.0)).xyz;

// Output:0
	VERTEX = n_out8p0.xy;

}

void fragment() {
// ScalarUniform:5
	float n_out5p0 = Blur_Radius;

// ScalarUniform:10
	float n_out10p0 = Blur_Samples;

// Expression:9
	vec3 n_out9p0;
	float n_out9p1;
	n_out9p0 = vec3(0.0, 0.0, 0.0);
	n_out9p1 = 0.0;
	{
		float scale = n_out5p0 / (n_out10p0*2.0);
		
		vec4 col = vec4(0.0);
		float n = 0.0;
			
		for(int x=-int(n_out10p0)/2; x < int(n_out10p0)/2; ++x) {
			for(int y=-int(n_out10p0)/2; y < int(n_out10p0)/2; ++y) {
				col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
				n += 1.0;
			}
		}
		
		col /= n;
		
		n_out9p0 = col.rgb;
		n_out9p1 = col.a;
	}

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out9p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -334.227, 382.875 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 520, 100 )
nodes/vertex/2/node = SubResource( 12 )
nodes/vertex/2/position = Vector2( -2020, -80 )
nodes/vertex/5/node = SubResource( 23 )
nodes/vertex/5/position = Vector2( 60, 160 )
nodes/vertex/8/node = SubResource( 24 )
nodes/vertex/8/position = Vector2( 260, 80 )
nodes/vertex/9/node = SubResource( 25 )
nodes/vertex/9/position = Vector2( 0, 20 )
nodes/vertex/10/node = SubResource( 4 )
nodes/vertex/10/position = Vector2( -220, -80 )
nodes/vertex/11/node = SubResource( 5 )
nodes/vertex/11/position = Vector2( -420, -120 )
nodes/vertex/12/node = SubResource( 6 )
nodes/vertex/12/position = Vector2( -420, -20 )
nodes/vertex/14/node = SubResource( 7 )
nodes/vertex/14/position = Vector2( -220, 120 )
nodes/vertex/15/node = SubResource( 8 )
nodes/vertex/15/position = Vector2( -420, 180 )
nodes/vertex/16/node = SubResource( 9 )
nodes/vertex/16/position = Vector2( -420, 80 )
nodes/vertex/18/node = SubResource( 10 )
nodes/vertex/18/position = Vector2( -980, 220 )
nodes/vertex/19/node = SubResource( 11 )
nodes/vertex/19/position = Vector2( -860, -40 )
nodes/vertex/24/node = SubResource( 13 )
nodes/vertex/24/position = Vector2( -1440, -40 )
nodes/vertex/25/node = SubResource( 14 )
nodes/vertex/25/position = Vector2( -1260, -20 )
nodes/vertex/26/node = SubResource( 15 )
nodes/vertex/26/position = Vector2( -1960, 160 )
nodes/vertex/27/node = SubResource( 16 )
nodes/vertex/27/position = Vector2( -1260, 100 )
nodes/vertex/28/node = SubResource( 17 )
nodes/vertex/28/position = Vector2( -1440, 80 )
nodes/vertex/29/node = SubResource( 18 )
nodes/vertex/29/position = Vector2( -1080, 0 )
nodes/vertex/30/node = SubResource( 19 )
nodes/vertex/30/position = Vector2( -1640, 180 )
nodes/vertex/31/node = SubResource( 20 )
nodes/vertex/31/position = Vector2( -1960, 100 )
nodes/vertex/32/node = SubResource( 21 )
nodes/vertex/32/position = Vector2( -1860, -100 )
nodes/vertex/33/node = SubResource( 22 )
nodes/vertex/33/position = Vector2( -600, -20 )
nodes/vertex/connections = PoolIntArray( 5, 0, 8, 1, 9, 0, 8, 0, 11, 0, 10, 0, 12, 0, 10, 1, 10, 0, 9, 0, 15, 0, 14, 1, 16, 0, 14, 0, 14, 0, 9, 1, 18, 0, 19, 1, 8, 0, 0, 0, 24, 0, 25, 0, 26, 0, 24, 1, 19, 0, 11, 0, 19, 0, 16, 0, 19, 0, 15, 0, 28, 0, 27, 0, 29, 0, 19, 0, 30, 0, 28, 1, 26, 0, 30, 0, 2, 0, 32, 0, 31, 0, 32, 1, 32, 0, 28, 0, 32, 0, 24, 0, 27, 0, 29, 1, 25, 0, 29, 0, 19, 0, 33, 0, 33, 0, 12, 0 )
nodes/fragment/0/position = Vector2( 940, 480 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( -300, 480 )
nodes/fragment/9/node = SubResource( 3 )
nodes/fragment/9/position = Vector2( -80, 440 )
nodes/fragment/9/size = Vector2( 979.92, 771.44 )
nodes/fragment/9/input_ports = "0,0,radius;1,0,SAMPLES;"
nodes/fragment/9/output_ports = "0,1,color;1,0,alpha;"
nodes/fragment/9/expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -300, 540 )
nodes/fragment/connections = PoolIntArray( 9, 1, 0, 1, 9, 0, 0, 0, 5, 0, 9, 0, 10, 0, 9, 1 )

[sub_resource type="ShaderMaterial" id=27]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = 1.0
shader_param/Wind_Speed = 4.0
shader_param/Wind_Force = 0.05
shader_param/Blur_Radius = 0.0
shader_param/Blur_Samples = 2.0

[sub_resource type="MultiMesh" id=28]
custom_data_format = 2
instance_count = 10
visible_instance_count = 10
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( 0.168939, 0.158903, -0.158903, 0.168939, -288.129, -271.012, -0.14714, 0.181631, 0.181631, 0.14714, 245.917, -303.562, 0.117827, -0.142571, 0.142571, 0.117827, -252.995, 306.125, 0.211029, -0.023155, 0.023155, 0.211029, -407.295, 44.6902, -0.221322, 0.0017865, -0.0017865, -0.221322, 426.479, -3.44251, 0.196595, 0.0950775, 0.0950775, -0.196595, -358.049, -173.16, -0.0589935, -0.214849, -0.214849, 0.0589935, 115.534, 420.766, -0.201861, 0.0606206, -0.0606206, -0.201861, 412.851, -123.983, 0.048323, 0.159255, -0.159255, 0.048323, -112.361, -370.301, 0.111896, 0.153096, 0.153096, -0.111896, -235.74, -322.538 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="GDScript" id=29]
script/source = "tool
extends MultiMeshInstance2D

export var leaf_count := 100
export var min_radius := 700.0
export var max_radius := 1000.0
export var leaf_scale := 1.0
export var scale_spread := 0.2

export var new_placement := false setget _generate_new_placement

func _generate_new_placement(value: bool) -> void:
	var new_placement = false
	
	multimesh.instance_count = leaf_count
	multimesh.visible_instance_count = leaf_count
	for i in range(leaf_count):
		var r = randf() * 2 * PI
		var t : Transform2D
		
		if randi() % 2 == 0:
			t = Transform2D.FLIP_Y
		else:
			t = Transform2D.IDENTITY
		var scale_random = rand_range(1 - scale_spread, 1 + scale_spread)
		t = t.scaled(Vector2(leaf_scale, leaf_scale) * scale_random)
		var dist = rand_range(min_radius, max_radius)
		var angle = randf() * 2 * PI
		var pos := Vector2(dist * cos(angle), dist * sin(angle))
		t = t.rotated(Vector2.ZERO.angle_to_point(pos))
		t.origin = pos
		
		multimesh.set_instance_transform_2d(i, t)
"

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.8
shader_param/Wind_Force = 0.08
shader_param/Blur_Radius = 0.04
shader_param/Blur_Samples = 3.0

[sub_resource type="MultiMesh" id=31]
custom_data_format = 2
instance_count = 40
visible_instance_count = 40
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( -0.189406, -0.747535, 0.747535, -0.189406, 134.481, 530.762, -0.886792, -0.364229, 0.364229, -0.886792, 495.911, 203.684, -0.120962, 0.80108, 0.80108, 0.120962, 88.893, -588.701, -0.484561, -0.683541, -0.683541, 0.484561, 314.606, 443.796, -0.497282, -0.655665, -0.655665, 0.497282, 344.715, 454.506, 0.659681, 0.00602485, 0.00602485, -0.659681, -613.497, -5.60306, 0.277323, 0.842229, -0.842229, 0.277323, -181.119, -550.058, 0.562727, 0.769376, 0.769376, -0.562727, -338.782, -463.193, -0.773631, -0.549177, 0.549177, -0.773631, 458.563, 325.52, -0.345886, 0.696793, 0.696793, 0.345886, 263.171, -530.161, 0.544283, 0.385316, 0.385316, -0.544283, -498.831, -353.139, 0.58586, -0.347086, -0.347086, -0.58586, -480.912, 284.911, 0.0218441, 0.720851, 0.720851, -0.0218441, -18.047, -595.548, 0.618541, -0.431261, 0.431261, 0.618541, -494.913, 345.065, 0.705059, -0.388638, 0.388638, 0.705059, -479.885, 264.519, 0.800988, -0.421938, 0.421938, 0.800988, -475.922, 250.702, -0.00467671, 0.80372, 0.80372, 0.00467671, 3.22372, -554.019, 0.804028, -0.472689, 0.472689, 0.804028, -506.535, 297.793, -0.911054, 0.194738, -0.194738, -0.911054, 571.421, -122.141, 0.679824, -0.274018, 0.274018, 0.679824, -509.594, 205.403, 0.549923, 0.464968, 0.464968, -0.549923, -436.775, -369.3, -0.591569, 0.275968, 0.275968, 0.591569, 488.874, -228.06, 0.157864, 0.647861, -0.647861, 0.157864, -135.494, -556.057, 0.597884, 0.481453, -0.481453, 0.597884, -419.206, -337.57, -0.775044, 0.42136, -0.42136, -0.775044, 493.214, -268.14, 0.419685, -0.660681, -0.660681, -0.419685, -312.1, 491.316, -0.369678, -0.529352, 0.529352, -0.369678, 340.265, 487.234, 0.38879, 0.580137, 0.580137, -0.38879, -343.559, -512.644, 0.874103, -0.355694, 0.355694, 0.874103, -538.867, 219.278, 0.661699, 0.0940189, -0.0940189, 0.661699, -536.767, -76.2676, 0.715709, 0.203133, 0.203133, -0.715709, -588.66, -167.074, 0.753164, -0.378404, 0.378404, 0.753164, -546.675, 274.66, 0.125646, 0.824464, -0.824464, 0.125646, -87.1537, -571.886, 0.0815112, -0.654302, 0.654302, 0.0815112, -73.9435, 593.555, 0.597773, 0.576715, -0.576715, 0.597773, -406.515, -392.195, -0.617075, -0.25871, -0.25871, 0.617075, 485.589, 203.585, 0.614396, 0.668144, 0.668144, -0.614396, -388.119, -422.072, -0.272296, -0.697547, 0.697547, -0.272296, 186.71, 478.3, -0.49025, 0.48274, -0.48274, -0.49025, 364.618, -359.033, -0.829466, -0.269773, -0.269773, 0.829466, 490.532, 159.539 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.5
shader_param/Wind_Force = 0.12
shader_param/Blur_Radius = 0.05
shader_param/Blur_Samples = 6.0

[sub_resource type="MultiMesh" id=33]
custom_data_format = 2
instance_count = 60
visible_instance_count = 60
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( 0.713508, 1.81009, 1.81009, -0.713508, -241.903, -613.679, -0.48039, -1.44192, -1.44192, 0.48039, 209.604, 629.139, 0.686031, 1.33433, 1.33433, -0.686031, -362.973, -705.98, 0.35196, -1.95824, 1.95824, 0.35196, -139.727, 777.413, 1.4435, 0.256942, -0.256942, 1.4435, -764.811, -136.136, 1.73866, -0.0636461, 0.0636461, 1.73866, -702.167, 25.7038, -1.35054, 0.271706, -0.271706, -1.35054, 743.457, -149.571, 1.40468, 0.726639, -0.726639, 1.40468, -578.176, -299.09, 1.21599, -0.613147, -0.613147, -1.21599, -707.773, 356.885, 0.0468011, 1.64601, 1.64601, -0.0468011, -21.2671, -747.971, -1.65077, -1.19337, -1.19337, 1.65077, 633.799, 458.185, -1.27974, 0.632925, -0.632925, -1.27974, 637.787, -315.431, 0.606628, -1.57061, 1.57061, 0.606628, -244.533, 633.116, 0.485221, 1.64644, 1.64644, -0.485221, -224.004, -760.083, -1.53269, -0.936239, 0.936239, -1.53269, 652.092, 398.33, -1.47476, -0.853645, -0.853645, 1.47476, 658.988, 381.447, 1.66461, -0.511275, -0.511275, -1.66461, -658.911, 202.38, -1.90326, -0.0455773, 0.0455773, -1.90326, 761.325, 18.2314, -0.10237, -1.45113, 1.45113, -0.10237, 50.978, 722.629, -1.54148, -1.02068, -1.02068, 1.54148, 605.107, 400.664, -1.28527, 0.567811, 0.567811, 1.28527, 666.977, -294.659, 0.602824, 1.62186, -1.62186, 0.602824, -237.911, -640.083, 1.48725, 0.928534, -0.928534, 1.48725, -557.755, -348.222, -0.575347, 1.34313, 1.34313, 0.575347, 298.304, -696.381, 1.07844, -1.52092, 1.52092, 1.07844, -436.21, 615.184, 1.10012, -0.80673, 0.80673, 1.10012, -584.063, 428.299, 1.72627, -0.231897, -0.231897, -1.72627, -682.489, 91.6819, 0.882795, 1.11152, 1.11152, -0.882795, -444.063, -559.116, -1.93485, 0.455006, -0.455006, -1.93485, 650.523, -152.979, 0.481507, -1.48341, -1.48341, -0.481507, -229.258, 706.288, 0.970045, 1.1203, -1.1203, 0.970045, -437.794, -505.606, 1.46874, 0.712377, 0.712377, -1.46874, -649.687, -315.114, 1.73532, 0.104761, 0.104761, -1.73532, -743.838, -44.9055, -0.631957, 1.82722, -1.82722, -0.631957, 261.348, -755.655, 0.988841, 1.11637, 1.11637, -0.988841, -479.671, -541.532, -0.0146441, -1.85221, 1.85221, -0.0146441, 6.16023, 779.156, 0.586502, 1.51449, 1.51449, -0.586502, -252.084, -650.941, 1.24229, -1.56629, 1.56629, 1.24229, -462.415, 583.015, 0.320649, 1.77149, -1.77149, 0.320649, -122.646, -677.585, -1.46237, 0.104408, 0.104408, 1.46237, 722.638, -51.594, -1.27084, 0.864825, 0.864825, 1.27084, 544.728, -370.696, -1.46115, 0.848699, -0.848699, -1.46115, 596.275, -346.343, 0.296559, 1.48837, 1.48837, -0.296559, -127.127, -638.024, 0.0969481, -1.98543, 1.98543, 0.0969481, -33.3938, 683.883, -1.24337, -1.2441, -1.2441, 1.24337, 528.303, 528.617, -1.06406, -1.5234, 1.5234, -1.06406, 390.13, 558.545, -0.601841, 1.51532, 1.51532, 0.601841, 258.641, -651.21, -0.304938, -1.5152, -1.5152, 0.304938, 154.88, 769.578, 0.408727, -1.51815, -1.51815, -0.408727, -169.84, 630.843, 1.41352, -0.850088, 0.850088, 1.41352, -640.174, 384.998, 1.7049, 0.458512, -0.458512, 1.7049, -693.686, -186.559, -1.07823, 0.869851, -0.869851, -1.07823, 564.975, -455.788, -0.0363412, 2.02069, -2.02069, -0.0363412, 12.3487, -686.625, 0.949061, 1.61242, 1.61242, -0.949061, -388.976, -660.858, -0.692464, 1.73545, -1.73545, -0.692464, 273.991, -686.674, -0.708038, 1.79037, -1.79037, -0.708038, 255.379, -645.76, -0.405425, 1.38354, 1.38354, 0.405425, 205.521, -701.357, 1.91423, -0.182482, -0.182482, -1.91423, -716.701, 68.3225, 0.201165, 1.92106, -1.92106, 0.201165, -79.5375, -759.557, 0.490084, -1.52176, 1.52176, 0.490084, -206.522, 641.27 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="Animation" id=34]
resource_name = "Close"
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 1, 1 ),
"update": 0,
"values": [ 0.0, 10.0, -720.0 ]
}

[sub_resource type="Animation" id=35]
resource_name = "Reset"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 0.5 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}

[sub_resource type="Animation" id=36]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 1.1 ),
"transitions": PoolRealArray( 0.5, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.4 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.6, 1.1, 1.5 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}

[node name="LeafLayer" type="Node2D"]
rotation = -12.5664
script = ExtResource( 5 )

[node name="Back" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.658824, 0.658824, 0.658824, 1 )
light_mask = 16
material = SubResource( 27 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 28 )
texture = ExtResource( 3 )
script = SubResource( 29 )
leaf_count = 10
min_radius = 377.0
max_radius = 460.0
leaf_scale = 0.2
scale_spread = 0.2
new_placement = false

[node name="Middle" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.388235, 0.388235, 0.388235, 1 )
light_mask = 16
material = SubResource( 30 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 31 )
texture = ExtResource( 1 )
script = SubResource( 29 )
leaf_count = 40
min_radius = 510.0
max_radius = 620.0
leaf_scale = 0.8
scale_spread = 0.2
new_placement = false

[node name="Front" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.109804, 0.109804, 0.109804, 1 )
light_mask = 0
material = SubResource( 32 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 33 )
texture = ExtResource( 2 )
script = SubResource( 29 )
leaf_count = 60
min_radius = 650.0
max_radius = 800.0
leaf_scale = 1.7
scale_spread = 0.2
new_placement = false

[node name="DebugBackground" type="Polygon2D" parent="."]
visible = false
position = Vector2( 160.964, 20.5486 )
color = Color( 0.380392, 0.345098, 0.345098, 1 )
polygon = PoolVector2Array( 157.767, -1197.84, 921.491, -721.798, 1075.61, 288.511, 363.253, 1096.76, -790.896, 990.589, -1445.03, 124.122, -1075.15, -937.558, -407.321, -1214.96 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Close = SubResource( 34 )
anims/Reset = SubResource( 35 )
anims/Shrink = SubResource( 36 )
