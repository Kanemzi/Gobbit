[gd_scene load_steps=42 format=2]

[ext_resource path="res://assets/textures/environment/leafs/leaf-1-mask.tres" type="ArrayMesh" id=1]
[ext_resource path="res://assets/textures/environment/leafs/leaf-3.png" type="Texture" id=2]
[ext_resource path="res://assets/textures/environment/leafs/leaf-2.png" type="Texture" id=3]
[ext_resource path="res://assets/textures/environment/leafs/leaf-1.png" type="Texture" id=4]
[ext_resource path="res://src/ui/menu/leafs/LeafLayer.gd" type="Script" id=5]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "Blur_Samples"

[sub_resource type="VisualShaderNodeScalarUniform" id=28]
uniform_name = "Blur_Radius"

[sub_resource type="VisualShaderNodeExpression" id=29]
size = Vector2( 979.92, 771.44 )
expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"

[sub_resource type="VisualShaderNodeVectorCompose" id=30]

[sub_resource type="VisualShaderNodeScalarFunc" id=27]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=31]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=32]

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=34]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=35]
uniform_name = "Wind_Force"

[sub_resource type="VisualShaderNodeScalarOp" id=36]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=37]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=38]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=39]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=40]
uniform_name = "Wind_Speed"

[sub_resource type="VisualShaderNodeScalarFunc" id=41]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=42]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 2.3 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "Wind_Offset"

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeScalarFunc" id=22]
function = 19

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=24]

[sub_resource type="VisualShaderNodeTransformCompose" id=25]
default_input_values = [ 0, Vector3( 1, 0, 0 ), 1, Vector3( 0, 1, 0 ), 2, Vector3( 0, 0, 0 ), 3, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShader" id=26]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform float Wind_Offset;
uniform float Wind_Speed;
uniform float Wind_Force;
uniform float Blur_Radius;
uniform float Blur_Samples;



void vertex() {
// Input:2
	float n_out2p0 = TIME;

// ScalarUniform:31
	float n_out31p0 = Wind_Offset;

// ScalarOp:32
	float n_out32p0 = n_out2p0 + n_out31p0;

// ScalarUniform:26
	float n_out26p0 = Wind_Speed;

// ScalarOp:24
	float n_out24p0 = n_out32p0 * n_out26p0;

// ScalarFunc:25
	float n_out25p0 = sin(n_out24p0);

// ScalarOp:30
	float n_in30p1 = 2.30000;
	float n_out30p0 = n_out26p0 * n_in30p1;

// ScalarOp:28
	float n_out28p0 = n_out32p0 * n_out30p0;

// ScalarFunc:27
	float n_out27p0 = sin(n_out28p0);

// ScalarOp:29
	float n_out29p0 = n_out25p0 + n_out27p0;

// ScalarUniform:18
	float n_out18p0 = Wind_Force;

// ScalarOp:19
	float n_out19p0 = n_out29p0 * n_out18p0;

// ScalarFunc:11
	float n_out11p0 = cos(n_out19p0);

// ScalarFunc:33
	float n_out33p0 = -(n_out19p0);

// ScalarFunc:12
	float n_out12p0 = sin(n_out33p0);

// VectorCompose:10
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out11p0, n_out12p0, n_in10p2);

// ScalarFunc:16
	float n_out16p0 = sin(n_out19p0);

// ScalarFunc:15
	float n_out15p0 = cos(n_out19p0);

// VectorCompose:14
	float n_in14p2 = 0.00000;
	vec3 n_out14p0 = vec3(n_out16p0, n_out15p0, n_in14p2);

// TransformCompose:9
	vec3 n_in9p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in9p3 = vec3(0.00000, 0.00000, 0.00000);
	mat4 n_out9p0 = mat4(vec4(n_out10p0, 0.0), vec4(n_out14p0, 0.0), vec4(n_in9p2, 0.0), vec4(n_in9p3, 1.0));

// Input:5
	vec3 n_out5p0 = vec3(VERTEX, 0.0);

// TransformVectorMult:8
	vec3 n_out8p0 = (n_out9p0 * vec4(n_out5p0, 1.0)).xyz;

// Output:0
	VERTEX = n_out8p0.xy;

}

void fragment() {
// ScalarUniform:5
	float n_out5p0 = Blur_Radius;

// ScalarUniform:10
	float n_out10p0 = Blur_Samples;

// Expression:9
	vec3 n_out9p0;
	float n_out9p1;
	n_out9p0 = vec3(0.0, 0.0, 0.0);
	n_out9p1 = 0.0;
	{
		float scale = n_out5p0 / (n_out10p0*2.0);
		
		vec4 col = vec4(0.0);
		float n = 0.0;
			
		for(int x=-int(n_out10p0)/2; x < int(n_out10p0)/2; ++x) {
			for(int y=-int(n_out10p0)/2; y < int(n_out10p0)/2; ++y) {
				col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
				n += 1.0;
			}
		}
		
		col /= n;
		
		n_out9p0 = col.rgb;
		n_out9p1 = col.a;
	}

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out9p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -334.227, 382.875 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 520, 100 )
nodes/vertex/2/node = SubResource( 37 )
nodes/vertex/2/position = Vector2( -2020, -80 )
nodes/vertex/5/node = SubResource( 23 )
nodes/vertex/5/position = Vector2( 60, 160 )
nodes/vertex/8/node = SubResource( 24 )
nodes/vertex/8/position = Vector2( 260, 80 )
nodes/vertex/9/node = SubResource( 25 )
nodes/vertex/9/position = Vector2( 0, 20 )
nodes/vertex/10/node = SubResource( 30 )
nodes/vertex/10/position = Vector2( -220, -80 )
nodes/vertex/11/node = SubResource( 27 )
nodes/vertex/11/position = Vector2( -420, -120 )
nodes/vertex/12/node = SubResource( 31 )
nodes/vertex/12/position = Vector2( -420, -20 )
nodes/vertex/14/node = SubResource( 32 )
nodes/vertex/14/position = Vector2( -220, 120 )
nodes/vertex/15/node = SubResource( 33 )
nodes/vertex/15/position = Vector2( -420, 180 )
nodes/vertex/16/node = SubResource( 34 )
nodes/vertex/16/position = Vector2( -420, 80 )
nodes/vertex/18/node = SubResource( 35 )
nodes/vertex/18/position = Vector2( -980, 220 )
nodes/vertex/19/node = SubResource( 36 )
nodes/vertex/19/position = Vector2( -860, -40 )
nodes/vertex/24/node = SubResource( 38 )
nodes/vertex/24/position = Vector2( -1440, -40 )
nodes/vertex/25/node = SubResource( 39 )
nodes/vertex/25/position = Vector2( -1260, -20 )
nodes/vertex/26/node = SubResource( 40 )
nodes/vertex/26/position = Vector2( -1960, 160 )
nodes/vertex/27/node = SubResource( 41 )
nodes/vertex/27/position = Vector2( -1260, 100 )
nodes/vertex/28/node = SubResource( 42 )
nodes/vertex/28/position = Vector2( -1440, 80 )
nodes/vertex/29/node = SubResource( 18 )
nodes/vertex/29/position = Vector2( -1080, 0 )
nodes/vertex/30/node = SubResource( 19 )
nodes/vertex/30/position = Vector2( -1640, 180 )
nodes/vertex/31/node = SubResource( 20 )
nodes/vertex/31/position = Vector2( -1960, 100 )
nodes/vertex/32/node = SubResource( 21 )
nodes/vertex/32/position = Vector2( -1860, -100 )
nodes/vertex/33/node = SubResource( 22 )
nodes/vertex/33/position = Vector2( -600, -20 )
nodes/vertex/connections = PoolIntArray( 5, 0, 8, 1, 9, 0, 8, 0, 11, 0, 10, 0, 12, 0, 10, 1, 10, 0, 9, 0, 15, 0, 14, 1, 16, 0, 14, 0, 14, 0, 9, 1, 18, 0, 19, 1, 8, 0, 0, 0, 24, 0, 25, 0, 26, 0, 24, 1, 19, 0, 11, 0, 19, 0, 16, 0, 19, 0, 15, 0, 28, 0, 27, 0, 29, 0, 19, 0, 30, 0, 28, 1, 26, 0, 30, 0, 2, 0, 32, 0, 31, 0, 32, 1, 32, 0, 28, 0, 32, 0, 24, 0, 27, 0, 29, 1, 25, 0, 29, 0, 19, 0, 33, 0, 33, 0, 12, 0 )
nodes/fragment/0/position = Vector2( 940, 480 )
nodes/fragment/5/node = SubResource( 28 )
nodes/fragment/5/position = Vector2( -300, 480 )
nodes/fragment/9/node = SubResource( 29 )
nodes/fragment/9/position = Vector2( -80, 440 )
nodes/fragment/9/size = Vector2( 979.92, 771.44 )
nodes/fragment/9/input_ports = "0,0,radius;1,0,SAMPLES;"
nodes/fragment/9/output_ports = "0,1,color;1,0,alpha;"
nodes/fragment/9/expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -300, 540 )
nodes/fragment/connections = PoolIntArray( 9, 1, 0, 1, 9, 0, 0, 0, 5, 0, 9, 0, 10, 0, 9, 1 )

[sub_resource type="ShaderMaterial" id=43]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = 1.0
shader_param/Wind_Speed = 4.0
shader_param/Wind_Force = 0.05
shader_param/Blur_Radius = 0.0
shader_param/Blur_Samples = 2.0

[sub_resource type="MultiMesh" id=44]
custom_data_format = 2
instance_count = 10
visible_instance_count = 10
mesh = ExtResource( 1 )
transform_2d_array = PoolVector2Array( -0.123769, 0.129349, -0.129349, -0.123769, 294.89, -308.183, 0.186835, 0.000423256, -0.000423256, 0.186835, -453.387, -1.0271, -0.208878, -0.087121, -0.087121, 0.208878, 405.922, 169.306, -0.165786, -0.0987187, -0.0987187, 0.165786, 367.394, 218.768, -0.0597845, -0.190081, 0.190081, -0.0597845, 132.198, 420.315, -0.0312676, -0.228932, 0.228932, -0.0312676, 54.9047, 401.996, 0.167912, 0.0512404, -0.0512404, 0.167912, -400.889, -122.336, -0.176558, 0.14565, -0.14565, -0.176558, 341.058, -281.353, -0.118561, -0.118854, -0.118854, 0.118561, 273.769, 274.445, 0.168446, 0.0868218, -0.0868218, 0.168446, -360.266, -185.691 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="GDScript" id=45]
script/source = "tool
extends MultiMeshInstance2D

export var leaf_count := 100
export var min_radius := 700.0
export var max_radius := 1000.0
export var leaf_scale := 1.0
export var scale_spread := 0.2

export var new_placement := false setget _generate_new_placement

func _generate_new_placement(value: bool) -> void:
	var new_placement = false
	
	multimesh.instance_count = leaf_count
	multimesh.visible_instance_count = leaf_count
	for i in range(leaf_count):
		var r = randf() * 2 * PI
		var t : Transform2D
		
		if randi() % 2 == 0:
			t = Transform2D.FLIP_Y
		else:
			t = Transform2D.IDENTITY
		var scale_random = rand_range(1 - scale_spread, 1 + scale_spread)
		t = t.scaled(Vector2(leaf_scale, leaf_scale) * scale_random)
		var dist = rand_range(min_radius, max_radius)
		var angle = randf() * 2 * PI
		var pos := Vector2(dist * cos(angle), dist * sin(angle))
		t = t.rotated(Vector2.ZERO.angle_to_point(pos))
		t.origin = pos
		
		multimesh.set_instance_transform_2d(i, t)
"

[sub_resource type="ShaderMaterial" id=46]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.8
shader_param/Wind_Force = 0.08
shader_param/Blur_Radius = 0.04
shader_param/Blur_Samples = 3.0

[sub_resource type="MultiMesh" id=47]
custom_data_format = 2
instance_count = 40
visible_instance_count = 40
mesh = ExtResource( 1 )
transform_2d_array = PoolVector2Array( 0.685525, 0.537964, -0.537964, 0.685525, -409.567, -321.407, -0.424117, -0.508281, -0.508281, 0.424117, 361.415, 433.136, -0.216599, 0.798436, -0.798436, -0.216599, 160.752, -592.572, 0.61192, -0.721427, -0.721427, -0.61192, -361.726, 426.459, 0.2835, -0.592251, 0.592251, 0.2835, -263.875, 551.252, -0.856163, -0.26791, -0.26791, 0.856163, 525.25, 164.361, -0.336684, -0.715496, -0.715496, 0.336684, 262.707, 558.286, -0.76763, 0.194825, 0.194825, 0.76763, 547.253, -138.893, 0.853009, -0.167827, 0.167827, 0.853009, -518.29, 101.972, -0.480657, -0.517516, -0.517516, 0.480657, 407.929, 439.211, 0.148881, -0.824736, -0.824736, -0.148881, -101.775, 563.792, 0.669387, 0.523893, -0.523893, 0.669387, -428.188, -335.12, -0.919913, -0.135752, 0.135752, -0.919913, 504.92, 74.5112, -0.753187, 0.116177, 0.116177, 0.753187, 605.542, -93.403, 0.114007, -0.730035, 0.730035, 0.114007, -95.1205, 609.096, 0.685348, -0.217684, -0.217684, -0.685348, -524.574, 166.618, -0.247863, 0.811408, 0.811408, 0.247863, 151.753, -496.781, 0.892884, 0.337828, -0.337828, 0.892884, -536.872, -203.128, 0.234884, 0.633766, 0.633766, -0.234884, -209.327, -564.808, 0.914104, 0.246761, -0.246761, 0.914104, -510.108, -137.703, 0.836377, -0.307299, 0.307299, 0.836377, -557.719, 204.915, -0.57943, -0.754563, 0.754563, -0.57943, 341.014, 444.086, 0.918622, -0.177165, 0.177165, 0.918622, -575.263, 110.945, 0.665843, -0.010145, -0.010145, -0.665843, -600.76, 9.15336, 0.30216, 0.87638, 0.87638, -0.30216, -197.78, -573.638, 0.695606, 0.469408, 0.469408, -0.695606, -481.648, -325.026, -0.141165, 0.751505, -0.751505, -0.141165, 107.173, -570.549, 0.0807579, 0.678486, 0.678486, -0.0807579, -72.8642, -612.167, -0.751437, -0.188872, -0.188872, 0.751437, 557.353, 140.09, 0.30403, 0.842441, 0.842441, -0.30403, -199.423, -552.584, 0.885436, 0.207411, 0.207411, -0.885436, -581.61, -136.241, -0.119331, 0.656654, 0.656654, 0.119331, 98.944, -544.47, -0.666254, 0.258731, 0.258731, 0.666254, 491.233, -190.764, 0.438932, 0.84588, 0.84588, -0.438932, -259.719, -500.513, 0.485731, 0.489514, -0.489514, 0.485731, -393.806, -396.874, -0.381769, -0.529302, 0.529302, -0.381769, 328.965, 456.092, -0.704093, -0.497567, -0.497567, 0.704093, 417.954, 295.359, -0.792159, -0.245014, 0.245014, -0.792159, 586.161, 181.299, -0.491457, 0.685923, -0.685923, -0.491457, 350.203, -488.776, 0.367519, -0.668917, -0.668917, -0.367519, -296.118, 538.96 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=48]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.5
shader_param/Wind_Force = 0.12
shader_param/Blur_Radius = 0.05
shader_param/Blur_Samples = 6.0

[sub_resource type="MultiMesh" id=49]
custom_data_format = 2
instance_count = 60
visible_instance_count = 60
mesh = ExtResource( 1 )
transform_2d_array = PoolVector2Array( 1.82459, 0.596196, 0.596196, -1.82459, -707.946, -231.325, -0.798044, 1.81479, 1.81479, 0.798044, 314.155, -714.402, 1.22388, -0.883189, -0.883189, -1.22388, -562.562, 405.963, 0.244309, -1.57201, 1.57201, 0.244309, -114.696, 738.012, 1.82991, 0.873659, -0.873659, 1.82991, -610.931, -291.679, -0.0159919, 2.00923, -2.00923, -0.0159919, 5.71282, -717.764, -0.86946, -1.1651, 1.1651, -0.86946, 403.099, 540.166, 1.69057, -0.0308656, 0.0308656, 1.69057, -760.608, 13.8869, 0.0714118, 1.51169, 1.51169, -0.0714118, -30.7021, -649.921, -1.70989, 0.412711, 0.412711, 1.70989, 734.445, -177.271, 1.15527, -0.92664, 0.92664, 1.15527, -511.852, 410.557, 0.240035, -1.36005, -1.36005, -0.240035, -119.436, 676.731, 1.84865, 0.414422, 0.414422, -1.84865, -766.942, -171.93, 1.24884, -1.37512, -1.37512, -1.24884, -474.081, 522.021, -1.33423, -0.825126, 0.825126, -1.33423, 562.309, 347.748, -0.242612, -1.94925, -1.94925, 0.242612, 91.6773, 736.577, -1.70547, -0.187481, -0.187481, 1.70547, 669.306, 73.5761, -1.15589, 0.822584, -0.822584, -1.15589, 599.084, -426.336, -0.399971, 1.47964, -1.47964, -0.399971, 197.698, -731.358, -0.301313, 1.64124, 1.64124, 0.301313, 118.494, -645.43, -0.652699, 1.22322, 1.22322, 0.652699, 371.576, -696.368, -1.94402, -0.322068, -0.322068, 1.94402, 752.989, 124.748, -1.74818, 0.885945, 0.885945, 1.74818, 598.54, -303.328, 1.72483, 0.371582, -0.371582, 1.72483, -764.433, -164.683, -1.56322, -0.00126183, -0.00126183, 1.56322, 720.101, 0.581292, -1.76442, -0.445627, -0.445627, 1.76442, 763.152, 192.743, 0.242425, -1.64284, -1.64284, -0.242425, -108.584, 735.836, -1.94312, 0.284121, 0.284121, 1.94312, 659.328, -96.4062, 1.10855, -1.36, 1.36, 1.10855, -440.13, 539.963, -1.69296, -0.304702, 0.304702, -1.69296, 747.166, 134.476, 1.77407, 0.725179, -0.725179, 1.77407, -628.473, -256.897, -1.26395, 0.823746, -0.823746, -1.26395, 595.746, -388.263, -0.66443, -1.63992, -1.63992, 0.66443, 257.185, 634.773, 1.43745, 1.01916, 1.01916, -1.43745, -557.756, -395.453, 0.938644, 1.44798, -1.44798, 0.938644, -409.062, -631.033, 1.52894, -0.85697, 0.85697, 1.52894, -667.152, 373.939, 0.685075, 1.66012, 1.66012, -0.685075, -258.102, -625.45, -1.27563, -0.807699, 0.807699, -1.27563, 626.455, 396.656, -0.845116, 1.09011, 1.09011, 0.845116, 477.789, -616.297, 0.795365, -1.40881, 1.40881, 0.795365, -366.125, 648.51, 0.922263, 1.00919, -1.00919, 0.922263, -503.223, -550.655, -0.25643, -1.83866, -1.83866, 0.25643, 96.6549, 693.038, 1.62304, 0.637604, -0.637604, 1.62304, -683.256, -268.413, -1.39932, -1.09738, -1.09738, 1.39932, 616.098, 483.157, -1.42432, -0.385037, -0.385037, 1.42432, 769.135, 207.921, 1.92191, 0.0489377, -0.0489377, 1.92191, -702.04, -17.876, -0.782338, -1.24007, 1.24007, -0.782338, 420.689, 666.828, 1.08542, -0.962193, 0.962193, 1.08542, -574.414, 509.203, -1.66298, -1.01197, -1.01197, 1.66298, 663.089, 403.509, -0.689, 1.2983, -1.2983, -0.689, 338.521, -637.884, -1.48801, -0.614936, 0.614936, -1.48801, 706.872, 292.123, 1.81405, -0.837124, 0.837124, 1.81405, -640.761, 295.691, 1.1528, -1.53857, 1.53857, 1.1528, -449.726, 600.223, 1.01548, 0.974108, -0.974108, 1.01548, -470.633, -451.46, -1.93622, 0.270207, -0.270207, -1.93622, 784.519, -109.483, -1.33984, 1.02741, -1.02741, -1.33984, 563.04, -431.748, 1.46421, -1.20708, 1.20708, 1.46421, -576.32, 475.113, -1.13973, -1.03303, 1.03303, -1.13973, 562.562, 509.895, 0.68183, -1.70842, -1.70842, -0.68183, -258.209, 646.977, -0.472816, -1.83928, -1.83928, 0.472816, 170.58, 663.564 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="Animation" id=52]
resource_name = "Close"
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 1, 1 ),
"update": 0,
"values": [ 0.0, 10.0, -720.0 ]
}

[sub_resource type="Animation" id=50]
resource_name = "Reset"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 0.5 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}

[sub_resource type="Animation" id=51]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 1.1 ),
"transitions": PoolRealArray( 0.5, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.4 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.6, 1.1, 1.5 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}

[node name="LeafLayer" type="Node2D"]
rotation = -12.5664
script = ExtResource( 5 )

[node name="Back" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.658824, 0.658824, 0.658824, 1 )
light_mask = 16
material = SubResource( 43 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 44 )
texture = ExtResource( 2 )
script = SubResource( 45 )
leaf_count = 10
min_radius = 377.0
max_radius = 460.0
leaf_scale = 0.2

[node name="Middle" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.388235, 0.388235, 0.388235, 1 )
light_mask = 16
material = SubResource( 46 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 47 )
texture = ExtResource( 3 )
script = SubResource( 45 )
leaf_count = 40
min_radius = 510.0
max_radius = 620.0
leaf_scale = 0.8

[node name="Front" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.109804, 0.109804, 0.109804, 1 )
light_mask = 0
material = SubResource( 48 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 49 )
texture = ExtResource( 4 )
script = SubResource( 45 )
leaf_count = 60
min_radius = 650.0
max_radius = 800.0
leaf_scale = 1.7

[node name="DebugBackground" type="Polygon2D" parent="."]
visible = false
position = Vector2( 160.964, 20.5486 )
color = Color( 0.380392, 0.345098, 0.345098, 1 )
polygon = PoolVector2Array( 157.767, -1197.84, 921.491, -721.798, 1075.61, 288.511, 363.253, 1096.76, -790.896, 990.589, -1445.03, 124.122, -1075.15, -937.558, -407.321, -1214.96 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Close = SubResource( 52 )
anims/Reset = SubResource( 50 )
anims/Shrink = SubResource( 51 )
