[gd_scene load_steps=42 format=2]

[ext_resource path="res://assets/textures/environment/leafs/leaf-2.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/environment/leafs/leaf-1.png" type="Texture" id=2]
[ext_resource path="res://assets/textures/environment/leafs/leaf-3.png" type="Texture" id=3]
[ext_resource path="res://assets/textures/environment/leafs/leaf-1-mask.tres" type="ArrayMesh" id=4]
[ext_resource path="res://src/ui/menu/leafs-overlay/LeafLayer.gd" type="Script" id=5]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "Blur_Samples"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "Blur_Radius"

[sub_resource type="VisualShaderNodeExpression" id=3]
size = Vector2( 824.92, 548.44 )
expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"

[sub_resource type="VisualShaderNodeVectorCompose" id=4]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Wind_Force"

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "Wind_Speed"

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 2.3 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "Wind_Offset"

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeScalarFunc" id=22]
function = 19

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=24]

[sub_resource type="VisualShaderNodeTransformCompose" id=25]
default_input_values = [ 0, Vector3( 1, 0, 0 ), 1, Vector3( 0, 1, 0 ), 2, Vector3( 0, 0, 0 ), 3, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShader" id=26]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform float Wind_Offset;
uniform float Wind_Speed;
uniform float Wind_Force;
uniform float Blur_Radius;
uniform float Blur_Samples;



void vertex() {
// Input:2
	float n_out2p0 = TIME;

// ScalarUniform:31
	float n_out31p0 = Wind_Offset;

// ScalarOp:32
	float n_out32p0 = n_out2p0 + n_out31p0;

// ScalarUniform:26
	float n_out26p0 = Wind_Speed;

// ScalarOp:24
	float n_out24p0 = n_out32p0 * n_out26p0;

// ScalarFunc:25
	float n_out25p0 = sin(n_out24p0);

// ScalarOp:30
	float n_in30p1 = 2.30000;
	float n_out30p0 = n_out26p0 * n_in30p1;

// ScalarOp:28
	float n_out28p0 = n_out32p0 * n_out30p0;

// ScalarFunc:27
	float n_out27p0 = sin(n_out28p0);

// ScalarOp:29
	float n_out29p0 = n_out25p0 + n_out27p0;

// ScalarUniform:18
	float n_out18p0 = Wind_Force;

// ScalarOp:19
	float n_out19p0 = n_out29p0 * n_out18p0;

// ScalarFunc:11
	float n_out11p0 = cos(n_out19p0);

// ScalarFunc:33
	float n_out33p0 = -(n_out19p0);

// ScalarFunc:12
	float n_out12p0 = sin(n_out33p0);

// VectorCompose:10
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out11p0, n_out12p0, n_in10p2);

// ScalarFunc:16
	float n_out16p0 = sin(n_out19p0);

// ScalarFunc:15
	float n_out15p0 = cos(n_out19p0);

// VectorCompose:14
	float n_in14p2 = 0.00000;
	vec3 n_out14p0 = vec3(n_out16p0, n_out15p0, n_in14p2);

// TransformCompose:9
	vec3 n_in9p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in9p3 = vec3(0.00000, 0.00000, 0.00000);
	mat4 n_out9p0 = mat4(vec4(n_out10p0, 0.0), vec4(n_out14p0, 0.0), vec4(n_in9p2, 0.0), vec4(n_in9p3, 1.0));

// Input:5
	vec3 n_out5p0 = vec3(VERTEX, 0.0);

// TransformVectorMult:8
	vec3 n_out8p0 = (n_out9p0 * vec4(n_out5p0, 1.0)).xyz;

// Output:0
	VERTEX = n_out8p0.xy;

}

void fragment() {
// ScalarUniform:5
	float n_out5p0 = Blur_Radius;

// ScalarUniform:10
	float n_out10p0 = Blur_Samples;

// Expression:9
	vec3 n_out9p0;
	float n_out9p1;
	n_out9p0 = vec3(0.0, 0.0, 0.0);
	n_out9p1 = 0.0;
	{
		float scale = n_out5p0 / (n_out10p0*2.0);
		
		vec4 col = vec4(0.0);
		float n = 0.0;
			
		for(int x=-int(n_out10p0)/2; x < int(n_out10p0)/2; ++x) {
			for(int y=-int(n_out10p0)/2; y < int(n_out10p0)/2; ++y) {
				col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
				n += 1.0;
			}
		}
		
		col /= n;
		
		n_out9p0 = col.rgb;
		n_out9p1 = col.a;
	}

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out9p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -247, 375.5 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 520, 100 )
nodes/vertex/2/node = SubResource( 12 )
nodes/vertex/2/position = Vector2( -2020, -80 )
nodes/vertex/5/node = SubResource( 23 )
nodes/vertex/5/position = Vector2( 60, 160 )
nodes/vertex/8/node = SubResource( 24 )
nodes/vertex/8/position = Vector2( 260, 80 )
nodes/vertex/9/node = SubResource( 25 )
nodes/vertex/9/position = Vector2( 0, 20 )
nodes/vertex/10/node = SubResource( 4 )
nodes/vertex/10/position = Vector2( -220, -80 )
nodes/vertex/11/node = SubResource( 5 )
nodes/vertex/11/position = Vector2( -420, -120 )
nodes/vertex/12/node = SubResource( 6 )
nodes/vertex/12/position = Vector2( -420, -20 )
nodes/vertex/14/node = SubResource( 7 )
nodes/vertex/14/position = Vector2( -220, 120 )
nodes/vertex/15/node = SubResource( 8 )
nodes/vertex/15/position = Vector2( -420, 180 )
nodes/vertex/16/node = SubResource( 9 )
nodes/vertex/16/position = Vector2( -420, 80 )
nodes/vertex/18/node = SubResource( 10 )
nodes/vertex/18/position = Vector2( -980, 220 )
nodes/vertex/19/node = SubResource( 11 )
nodes/vertex/19/position = Vector2( -860, -40 )
nodes/vertex/24/node = SubResource( 13 )
nodes/vertex/24/position = Vector2( -1440, -40 )
nodes/vertex/25/node = SubResource( 14 )
nodes/vertex/25/position = Vector2( -1260, -20 )
nodes/vertex/26/node = SubResource( 15 )
nodes/vertex/26/position = Vector2( -1960, 160 )
nodes/vertex/27/node = SubResource( 16 )
nodes/vertex/27/position = Vector2( -1260, 100 )
nodes/vertex/28/node = SubResource( 17 )
nodes/vertex/28/position = Vector2( -1440, 80 )
nodes/vertex/29/node = SubResource( 18 )
nodes/vertex/29/position = Vector2( -1080, 0 )
nodes/vertex/30/node = SubResource( 19 )
nodes/vertex/30/position = Vector2( -1640, 180 )
nodes/vertex/31/node = SubResource( 20 )
nodes/vertex/31/position = Vector2( -1960, 100 )
nodes/vertex/32/node = SubResource( 21 )
nodes/vertex/32/position = Vector2( -1860, -100 )
nodes/vertex/33/node = SubResource( 22 )
nodes/vertex/33/position = Vector2( -600, -20 )
nodes/vertex/connections = PoolIntArray( 5, 0, 8, 1, 9, 0, 8, 0, 11, 0, 10, 0, 12, 0, 10, 1, 10, 0, 9, 0, 15, 0, 14, 1, 16, 0, 14, 0, 14, 0, 9, 1, 18, 0, 19, 1, 8, 0, 0, 0, 24, 0, 25, 0, 26, 0, 24, 1, 19, 0, 11, 0, 19, 0, 16, 0, 19, 0, 15, 0, 28, 0, 27, 0, 29, 0, 19, 0, 30, 0, 28, 1, 26, 0, 30, 0, 2, 0, 32, 0, 31, 0, 32, 1, 32, 0, 28, 0, 32, 0, 24, 0, 27, 0, 29, 1, 25, 0, 29, 0, 19, 0, 33, 0, 33, 0, 12, 0 )
nodes/fragment/0/position = Vector2( 780, 480 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( -300, 480 )
nodes/fragment/9/node = SubResource( 3 )
nodes/fragment/9/position = Vector2( -80, 440 )
nodes/fragment/9/size = Vector2( 824.92, 548.44 )
nodes/fragment/9/input_ports = "0,0,radius;1,0,SAMPLES;"
nodes/fragment/9/output_ports = "0,1,color;1,0,alpha;"
nodes/fragment/9/expression = "float scale = radius / (SAMPLES*2.0);

vec4 col = vec4(0.0);
float n = 0.0;
	
for(int x=-int(SAMPLES)/2; x < int(SAMPLES)/2; ++x) {
	for(int y=-int(SAMPLES)/2; y < int(SAMPLES)/2; ++y) {
		col += texture(TEXTURE, UV + scale * vec2(float(x), float(y)));
		n += 1.0;
	}
}

col /= n;

color = col.rgb;
alpha = col.a;"
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -300, 540 )
nodes/fragment/connections = PoolIntArray( 9, 1, 0, 1, 9, 0, 0, 0, 5, 0, 9, 0, 10, 0, 9, 1 )

[sub_resource type="ShaderMaterial" id=27]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = 1.0
shader_param/Wind_Speed = 4.0
shader_param/Wind_Force = 0.05
shader_param/Blur_Radius = 0.0
shader_param/Blur_Samples = 2.0

[sub_resource type="MultiMesh" id=28]
custom_data_format = 2
instance_count = 10
visible_instance_count = 10
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( -0.0865355, -0.188579, 0.188579, -0.0865355, 176.516, 384.667, 0.224264, 0.0164142, 0.0164142, -0.224264, -400.593, -29.32, 0.0696611, 0.189493, 0.189493, -0.0696611, -150.402, -409.128, 0.168786, -0.156474, 0.156474, 0.168786, -323.926, 300.297, 0.0828082, -0.185815, 0.185815, 0.0828082, -166.84, 374.376, 0.0293952, -0.185693, -0.185693, -0.0293952, -70.2527, 443.795, 0.166576, -0.0796369, 0.0796369, 0.166576, -380.522, 181.92, 0.0274938, -0.221546, 0.221546, 0.0274938, -47.2709, 380.911, -0.0797943, -0.177619, 0.177619, -0.0797943, 177.361, 394.798, 0.0986935, 0.197356, -0.197356, 0.0986935, -169.716, -339.378 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="GDScript" id=29]
script/source = "tool
extends MultiMeshInstance2D

export var leaf_count := 100
export var min_radius := 700.0
export var max_radius := 1000.0
export var leaf_scale := 1.0
export var scale_spread := 0.2

export var new_placement := false setget _generate_new_placement

func _generate_new_placement(value: bool) -> void:
	var new_placement = false
	
	multimesh.instance_count = leaf_count
	multimesh.visible_instance_count = leaf_count
	for i in range(leaf_count):
		var r = randf() * 2 * PI
		var t : Transform2D
		
		if randi() % 2 == 0:
			t = Transform2D.FLIP_Y
		else:
			t = Transform2D.IDENTITY
		var scale_random = rand_range(1 - scale_spread, 1 + scale_spread)
		t = t.scaled(Vector2(leaf_scale, leaf_scale) * scale_random)
		var dist = rand_range(min_radius, max_radius)
		var angle = randf() * 2 * PI
		var pos := Vector2(dist * cos(angle), dist * sin(angle))
		t = t.rotated(Vector2.ZERO.angle_to_point(pos))
		t.origin = pos
		
		multimesh.set_instance_transform_2d(i, t)
"

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.8
shader_param/Wind_Force = 0.08
shader_param/Blur_Radius = 0.04
shader_param/Blur_Samples = 3.0

[sub_resource type="MultiMesh" id=31]
custom_data_format = 2
instance_count = 40
visible_instance_count = 40
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( -0.0643813, -0.834104, 0.834104, -0.0643813, 40.3994, 523.402, -0.187586, -0.788811, 0.788811, -0.187586, 143.252, 602.385, 0.465569, -0.584861, -0.584861, -0.465569, -356.581, 447.947, -0.167055, -0.696321, -0.696321, 0.167055, 135.192, 563.511, -0.568765, -0.555543, 0.555543, -0.568765, 432.402, 422.351, 0.854801, 0.281763, 0.281763, -0.854801, -506.044, -166.804, 0.78594, -0.384742, -0.384742, -0.78594, -514.616, 251.921, -0.630908, 0.321392, -0.321392, -0.630908, 475.095, -242.019, 0.643265, 0.174924, 0.174924, -0.643265, -563.574, -153.254, -0.921139, -0.269667, -0.269667, 0.921139, 539.112, 157.827, -0.847728, -0.221476, 0.221476, -0.847728, 572.02, 149.445, -0.809186, -0.170107, -0.170107, 0.809186, 532.476, 111.937, -0.806735, 0.376148, 0.376148, 0.806735, 484.862, -226.071, 0.566011, -0.587487, 0.587487, 0.566011, -363.713, 377.513, -0.269372, -0.716703, -0.716703, 0.269372, 184.736, 491.518, 0.294661, 0.681094, -0.681094, 0.294661, -224.67, -519.312, -0.192898, 0.68606, 0.68606, 0.192898, 162.409, -577.625, 0.636491, 0.392147, 0.392147, -0.636491, -483.615, -297.959, -0.244664, 0.636048, -0.636048, -0.244664, 191.748, -498.482, 0.0280277, -0.648371, 0.648371, 0.0280277, -22.4594, 519.56, 0.196652, -0.650549, 0.650549, 0.196652, -163.171, 539.792, 0.690664, -0.137168, -0.137168, -0.690664, -557.503, 110.722, -0.539588, 0.521328, -0.521328, -0.539588, 408.652, -394.823, 0.908399, 0.284273, 0.284273, -0.908399, -495.878, -155.179, 0.845319, -0.2938, -0.2938, -0.845319, -580.873, 201.889, -0.0356109, -0.715048, -0.715048, 0.0356109, 25.5117, 512.261, 0.537077, -0.419083, -0.419083, -0.537077, -426.973, 333.169, 0.70773, -0.0608893, -0.0608893, -0.70773, -537.773, 46.2672, -0.945776, 0.0501538, -0.0501538, -0.945776, 608.745, -32.2813, 0.54783, -0.414514, -0.414514, -0.54783, -452.628, 342.479, 0.731427, -0.201051, 0.201051, 0.731427, -530.605, 145.85, 0.638959, -0.202212, 0.202212, 0.638959, -531.96, 168.35, 0.885867, 0.127309, -0.127309, 0.885867, -581.727, -83.6007, -0.353968, 0.795021, 0.795021, 0.353968, 230.608, -517.949, 0.87053, -0.353284, 0.353284, 0.87053, -564.274, 228.997, 0.156476, 0.863152, 0.863152, -0.156476, -102.206, -563.786, 0.359146, 0.566345, -0.566345, 0.359146, -295.678, -466.261, 0.540998, -0.640539, 0.640539, 0.540998, -358.017, 423.89, 0.341148, -0.669652, 0.669652, 0.341148, -234.521, 460.349, 0.618414, -0.64073, -0.64073, -0.618414, -394.486, 408.721 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/Wind_Offset = null
shader_param/Wind_Speed = 0.5
shader_param/Wind_Force = 0.12
shader_param/Blur_Radius = 0.05
shader_param/Blur_Samples = 6.0

[sub_resource type="MultiMesh" id=33]
custom_data_format = 2
instance_count = 60
visible_instance_count = 60
mesh = ExtResource( 4 )
transform_2d_array = PoolVector2Array( -0.881467, -1.33185, 1.33185, -0.881467, 395.914, 598.203, 1.9004, -0.530999, 0.530999, 1.9004, -680.055, 190.018, 1.62973, 1.08077, 1.08077, -1.62973, -548.872, -363.99, 1.86047, 0.192904, 0.192904, -1.86047, -739.235, -76.6482, -1.48398, -0.0403429, 0.0403429, -1.48398, 682.113, 18.5436, 0.205342, 1.44683, -1.44683, 0.205342, -101.441, -714.752, -0.516992, -1.83692, 1.83692, -0.516992, 192.843, 685.191, -0.344875, -1.57064, -1.57064, 0.344875, 163.06, 742.612, 0.997031, 1.60805, 1.60805, -0.997031, -357.626, -576.791, -0.542798, 1.30486, 1.30486, 0.542798, 290.827, -699.133, 1.61209, 0.423313, 0.423313, -1.61209, -657.189, -172.569, 1.75847, -1.03388, -1.03388, -1.75847, -560.861, 329.755, -0.0123618, 1.65693, -1.65693, -0.0123618, 4.99393, -669.365, -0.227694, 1.55137, 1.55137, 0.227694, 102.811, -700.494, -1.62105, -0.0536802, 0.0536802, -1.62105, 783.235, 25.9365, 1.5789, 0.683283, -0.683283, 1.5789, -689.953, -298.583, 1.12305, -0.777857, 0.777857, 1.12305, -633.76, 438.962, 1.27283, 1.00679, 1.00679, -1.27283, -577.762, -457.003, 0.54466, 1.92535, -1.92535, 0.54466, -188.561, -666.554, 1.66639, 0.402373, 0.402373, -1.66639, -671.36, -162.109, -0.241238, -1.44671, 1.44671, -0.241238, 128.482, 770.516, -0.0196282, -1.36078, 1.36078, -0.0196282, 9.98662, 692.347, 1.37498, 0.191819, -0.191819, 1.37498, -651.99, -90.9568, -1.59878, 0.0107809, 0.0107809, 1.59878, 765.747, -5.16351, -1.38732, 1.08476, 1.08476, 1.38732, 517.811, -404.879, 1.36375, -0.951859, -0.951859, -1.36375, -631.369, 440.678, 1.67056, -0.412966, -0.412966, -1.67056, -762.824, 188.572, 0.168162, -1.69799, -1.69799, -0.168162, -73.8537, 745.726, 0.545614, -1.61931, -1.61931, -0.545614, -212.423, 630.445, 1.14883, -1.31746, -1.31746, -1.14883, -487.94, 559.562, 0.759774, 1.27155, -1.27155, 0.759774, -344.624, -576.761, -1.57872, -0.475255, 0.475255, -1.57872, 677.565, 203.973, -1.10164, 1.50226, -1.50226, -1.10164, 407.036, -555.056, 0.834358, 1.5106, -1.5106, 0.834358, -373.779, -676.723, 1.43081, -0.68583, -0.68583, -1.43081, -651.797, 312.425, -1.02342, 1.73517, -1.73517, -1.02342, 372.071, -630.834, 0.235298, -1.75018, 1.75018, 0.235298, -104.861, 779.972, 1.72142, -0.489105, 0.489105, 1.72142, -752.351, 213.765, 1.50648, -0.957115, 0.957115, 1.50648, -636.027, 404.09, -0.0150266, -1.93253, -1.93253, 0.0150266, 5.11288, 657.548, -1.4107, 1.12023, 1.12023, 1.4107, 567.275, -450.471, -1.32589, -0.610297, 0.610297, -1.32589, 667.804, 307.384, -0.919699, -1.10361, -1.10361, 0.919699, 510.112, 612.118, -1.72169, 0.867658, -0.867658, -1.72169, 587.853, -296.253, 0.9072, -1.31055, 1.31055, 0.9072, -438.004, 632.746, 1.45852, -0.222208, 0.222208, 1.45852, -762.437, 116.159, -1.22014, -0.802127, 0.802127, -1.22014, 565.378, 371.682, 0.478908, 1.89794, -1.89794, 0.478908, -192.291, -762.062, 0.212468, 1.56166, -1.56166, 0.212468, -107.035, -786.72, 1.60795, 0.746167, 0.746167, -1.60795, -716.95, -332.701, -1.6687, 1.05244, 1.05244, 1.6687, 579.806, -365.678, 1.16741, 1.39148, 1.39148, -1.16741, -454.903, -542.216, 1.91756, -0.386783, -0.386783, -1.91756, -658.577, 132.839, 1.63366, 0.67722, 0.67722, -1.63366, -720.464, -298.663, 0.375414, -1.4834, 1.4834, 0.375414, -189.155, 747.421, 1.4965, 0.690596, 0.690596, -1.4965, -675.677, -311.807, -1.38166, -0.365717, 0.365717, -1.38166, 740.798, 196.085, 1.77654, 0.0551721, 0.0551721, -1.77654, -689.129, -21.4015, 1.05102, 1.26127, 1.26127, -1.05102, -453.656, -544.403, 1.25906, -0.869193, -0.869193, -1.25906, -641.499, 442.861 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="Animation" id=34]
resource_name = "Close"
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 0.3, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.1, 1.1 ), Vector2( 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 0.3, 1, 1 ),
"update": 0,
"values": [ 0.0, 10.0, -720.0 ]
}

[sub_resource type="Animation" id=35]
resource_name = "Reset"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 0.5 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ) ]
}

[sub_resource type="Animation" id=36]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("Front:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 1.1 ),
"transitions": PoolRealArray( 0.5, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Middle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.4 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.6, 1.1, 1.5 ),
"transitions": PoolRealArray( 1, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 2.2, 2.2 ), Vector2( 2.2, 2.2 ), Vector2( 0.95, 0.95 ), Vector2( 1, 1 ) ]
}

[node name="LeafLayer" type="Node2D"]
rotation = -12.5664
script = ExtResource( 5 )

[node name="Back" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.658824, 0.658824, 0.658824, 1 )
light_mask = 16
material = SubResource( 27 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 28 )
texture = ExtResource( 3 )
script = SubResource( 29 )
leaf_count = 10
min_radius = 377.0
max_radius = 460.0
leaf_scale = 0.2
scale_spread = 0.2
new_placement = false

[node name="Middle" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.388235, 0.388235, 0.388235, 1 )
light_mask = 16
material = SubResource( 30 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 31 )
texture = ExtResource( 1 )
script = SubResource( 29 )
leaf_count = 40
min_radius = 510.0
max_radius = 620.0
leaf_scale = 0.8
scale_spread = 0.2
new_placement = false

[node name="Front" type="MultiMeshInstance2D" parent="."]
modulate = Color( 0.109804, 0.109804, 0.109804, 1 )
light_mask = 0
material = SubResource( 32 )
scale = Vector2( 1e-05, 1e-05 )
z_index = 4
multimesh = SubResource( 33 )
texture = ExtResource( 2 )
script = SubResource( 29 )
leaf_count = 60
min_radius = 650.0
max_radius = 800.0
leaf_scale = 1.7
scale_spread = 0.2
new_placement = false

[node name="DebugBackground" type="Polygon2D" parent="."]
visible = false
position = Vector2( 160.964, 20.5486 )
color = Color( 0.380392, 0.345098, 0.345098, 1 )
polygon = PoolVector2Array( 157.767, -1197.84, 921.491, -721.798, 1075.61, 288.511, 363.253, 1096.76, -790.896, 990.589, -1445.03, 124.122, -1075.15, -937.558, -407.321, -1214.96 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Close = SubResource( 34 )
anims/Reset = SubResource( 35 )
anims/Shrink = SubResource( 36 )
