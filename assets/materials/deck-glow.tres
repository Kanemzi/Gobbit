[gd_resource type="ShaderMaterial" load_steps=28 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 6

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 18

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=9]
constant = 0.95

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=11]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeColorConstant" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=20]
default_input_values = [ 0, Vector3( 1, 1, 0 ), 1, Vector3( 0, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=22]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=23]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=24]

[sub_resource type="VisualShaderNodeVectorOp" id=25]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=26]
constant = 30.0

[sub_resource type="VisualShader" id=27]
code = "shader_type spatial;
render_mode unshaded;

uniform vec4 Color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:48
	vec3 n_out48p0 = Color.rgb;
	float n_out48p1 = Color.a;

// Color:41
	vec3 n_out41p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out41p1 = 1.000000;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:44
	vec3 n_in44p0 = vec3(1.00000, 1.00000, 0.00000);
	vec3 n_out44p0 = n_in44p0 - n_out2p0;

// Scalar:3
	float n_out3p0 = 0.950000;

// VectorOp:45
	vec3 n_out45p0 = n_out44p0 - vec3(n_out3p0);

// Scalar:7
	float n_out7p0 = 30.000000;

// VectorOp:46
	vec3 n_out46p0 = n_out45p0 * vec3(n_out7p0);

// VectorDecompose:5
	float n_out5p0 = n_out46p0.x;
	float n_out5p1 = n_out46p0.y;
	float n_out5p2 = n_out46p0.z;

// ScalarOp:11
	float n_in11p1 = 1.00000;
	float n_out11p0 = n_out5p0 * n_in11p1;

// ScalarOp:18
	float n_in18p1 = 1.00000;
	float n_out18p0 = n_out5p1 * n_in18p1;

// ScalarOp:19
	float n_out19p0 = max(n_out11p0, n_out18p0);

// VectorOp:4
	vec3 n_out4p0 = n_out2p0 - vec3(n_out3p0);

// VectorOp:6
	vec3 n_out6p0 = n_out4p0 * vec3(n_out7p0);

// VectorDecompose:27
	float n_out27p0 = n_out6p0.x;
	float n_out27p1 = n_out6p0.y;
	float n_out27p2 = n_out6p0.z;

// ScalarOp:28
	float n_in28p1 = 1.00000;
	float n_out28p0 = n_out27p0 * n_in28p1;

// ScalarOp:29
	float n_in29p1 = 1.00000;
	float n_out29p0 = n_out27p1 * n_in29p1;

// ScalarOp:30
	float n_out30p0 = max(n_out28p0, n_out29p0);

// ScalarOp:31
	float n_out31p0 = max(n_out19p0, n_out30p0);

// Input:32
	float n_out32p0 = TIME;

// ScalarFunc:33
	float n_out33p0 = sin(n_out32p0);

// ScalarOp:35
	float n_in35p1 = 0.20000;
	float n_out35p0 = n_out33p0 * n_in35p1;

// ScalarOp:40
	float n_in40p1 = 0.50000;
	float n_out40p0 = n_out35p0 + n_in40p1;

// ScalarOp:37
	float n_out37p0 = n_out31p0 * n_out40p0;

// ScalarFunc:20
	float n_out20p0 = min(max(n_out37p0, 0.0), 1.0);

// ScalarOp:42
	float n_out42p0 = n_out41p1 * n_out20p0;

// Output:0
	ALBEDO = n_out48p0;
	ALPHA = n_out42p0;
	EMISSION = n_out41p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -400.482, 210.75 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 1400, 180 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -480, 360 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -380, 460 )
nodes/fragment/4/node = SubResource( 16 )
nodes/fragment/4/position = Vector2( -140, 340 )
nodes/fragment/5/node = SubResource( 24 )
nodes/fragment/5/position = Vector2( 280, 220 )
nodes/fragment/6/node = SubResource( 25 )
nodes/fragment/6/position = Vector2( 100, 440 )
nodes/fragment/7/node = SubResource( 26 )
nodes/fragment/7/position = Vector2( -160, 460 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 540, 140 )
nodes/fragment/18/node = SubResource( 2 )
nodes/fragment/18/position = Vector2( 540, 260 )
nodes/fragment/19/node = SubResource( 3 )
nodes/fragment/19/position = Vector2( 720, 180 )
nodes/fragment/20/node = SubResource( 5 )
nodes/fragment/20/position = Vector2( 1080, 620 )
nodes/fragment/27/node = SubResource( 6 )
nodes/fragment/27/position = Vector2( 280, 440 )
nodes/fragment/28/node = SubResource( 7 )
nodes/fragment/28/position = Vector2( 540, 380 )
nodes/fragment/29/node = SubResource( 8 )
nodes/fragment/29/position = Vector2( 540, 500 )
nodes/fragment/30/node = SubResource( 10 )
nodes/fragment/30/position = Vector2( 720, 420 )
nodes/fragment/31/node = SubResource( 11 )
nodes/fragment/31/position = Vector2( 900, 180 )
nodes/fragment/32/node = SubResource( 12 )
nodes/fragment/32/position = Vector2( 100, 700 )
nodes/fragment/33/node = SubResource( 13 )
nodes/fragment/33/position = Vector2( 340, 700 )
nodes/fragment/35/node = SubResource( 14 )
nodes/fragment/35/position = Vector2( 540, 660 )
nodes/fragment/37/node = SubResource( 15 )
nodes/fragment/37/position = Vector2( 900, 600 )
nodes/fragment/40/node = SubResource( 17 )
nodes/fragment/40/position = Vector2( 720, 660 )
nodes/fragment/41/node = SubResource( 18 )
nodes/fragment/41/position = Vector2( 920, 80 )
nodes/fragment/42/node = SubResource( 19 )
nodes/fragment/42/position = Vector2( 1180, 340 )
nodes/fragment/44/node = SubResource( 20 )
nodes/fragment/44/position = Vector2( -380, 220 )
nodes/fragment/45/node = SubResource( 21 )
nodes/fragment/45/position = Vector2( -140, 220 )
nodes/fragment/46/node = SubResource( 22 )
nodes/fragment/46/position = Vector2( 100, 220 )
nodes/fragment/48/node = SubResource( 23 )
nodes/fragment/48/position = Vector2( 920, -40 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 6, 0, 5, 0, 11, 0, 5, 1, 18, 0, 11, 0, 19, 0, 18, 0, 19, 1, 27, 0, 28, 0, 27, 1, 29, 0, 28, 0, 30, 0, 29, 0, 30, 1, 19, 0, 31, 0, 30, 0, 31, 1, 33, 0, 35, 0, 31, 0, 37, 0, 35, 0, 40, 0, 40, 0, 37, 1, 32, 0, 33, 0, 37, 0, 20, 0, 41, 1, 42, 0, 42, 0, 0, 1, 7, 0, 6, 1, 2, 0, 44, 1, 3, 0, 45, 1, 44, 0, 45, 0, 7, 0, 46, 1, 45, 0, 46, 0, 46, 0, 5, 0, 6, 0, 27, 0, 20, 0, 42, 1, 41, 0, 0, 5, 48, 0, 0, 0 )

[resource]
resource_local_to_scene = true
shader = SubResource( 27 )
shader_param/Color = Color( 1, 1, 1, 1 )
